/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 26.0, "minX": 0.0, "maxY": 21059.0, "series": [{"data": [[0.0, 119.0], [0.1, 119.0], [0.2, 123.0], [0.3, 123.0], [0.4, 125.0], [0.5, 125.0], [0.6, 125.0], [0.7, 126.0], [0.8, 127.0], [0.9, 127.0], [1.0, 127.0], [1.1, 127.0], [1.2, 127.0], [1.3, 128.0], [1.4, 128.0], [1.5, 129.0], [1.6, 129.0], [1.7, 129.0], [1.8, 129.0], [1.9, 129.0], [2.0, 130.0], [2.1, 130.0], [2.2, 130.0], [2.3, 130.0], [2.4, 132.0], [2.5, 132.0], [2.6, 132.0], [2.7, 132.0], [2.8, 132.0], [2.9, 132.0], [3.0, 132.0], [3.1, 132.0], [3.2, 133.0], [3.3, 133.0], [3.4, 133.0], [3.5, 133.0], [3.6, 133.0], [3.7, 133.0], [3.8, 133.0], [3.9, 134.0], [4.0, 134.0], [4.1, 134.0], [4.2, 136.0], [4.3, 136.0], [4.4, 136.0], [4.5, 136.0], [4.6, 136.0], [4.7, 136.0], [4.8, 136.0], [4.9, 136.0], [5.0, 137.0], [5.1, 137.0], [5.2, 137.0], [5.3, 137.0], [5.4, 137.0], [5.5, 137.0], [5.6, 139.0], [5.7, 139.0], [5.8, 139.0], [5.9, 139.0], [6.0, 139.0], [6.1, 139.0], [6.2, 140.0], [6.3, 140.0], [6.4, 140.0], [6.5, 140.0], [6.6, 140.0], [6.7, 140.0], [6.8, 140.0], [6.9, 140.0], [7.0, 141.0], [7.1, 141.0], [7.2, 141.0], [7.3, 141.0], [7.4, 141.0], [7.5, 141.0], [7.6, 141.0], [7.7, 141.0], [7.8, 141.0], [7.9, 141.0], [8.0, 141.0], [8.1, 141.0], [8.2, 141.0], [8.3, 141.0], [8.4, 141.0], [8.5, 141.0], [8.6, 142.0], [8.7, 142.0], [8.8, 142.0], [8.9, 142.0], [9.0, 142.0], [9.1, 142.0], [9.2, 142.0], [9.3, 142.0], [9.4, 143.0], [9.5, 143.0], [9.6, 143.0], [9.7, 143.0], [9.8, 144.0], [9.9, 144.0], [10.0, 145.0], [10.1, 145.0], [10.2, 145.0], [10.3, 145.0], [10.4, 145.0], [10.5, 145.0], [10.6, 145.0], [10.7, 145.0], [10.8, 146.0], [10.9, 146.0], [11.0, 146.0], [11.1, 146.0], [11.2, 146.0], [11.3, 146.0], [11.4, 146.0], [11.5, 146.0], [11.6, 146.0], [11.7, 146.0], [11.8, 146.0], [11.9, 146.0], [12.0, 146.0], [12.1, 146.0], [12.2, 146.0], [12.3, 146.0], [12.4, 147.0], [12.5, 147.0], [12.6, 147.0], [12.7, 147.0], [12.8, 147.0], [12.9, 147.0], [13.0, 147.0], [13.1, 147.0], [13.2, 147.0], [13.3, 148.0], [13.4, 149.0], [13.5, 149.0], [13.6, 150.0], [13.7, 150.0], [13.8, 150.0], [13.9, 150.0], [14.0, 150.0], [14.1, 150.0], [14.2, 150.0], [14.3, 150.0], [14.4, 150.0], [14.5, 150.0], [14.6, 150.0], [14.7, 150.0], [14.8, 150.0], [14.9, 150.0], [15.0, 151.0], [15.1, 151.0], [15.2, 151.0], [15.3, 151.0], [15.4, 151.0], [15.5, 151.0], [15.6, 151.0], [15.7, 151.0], [15.8, 151.0], [15.9, 151.0], [16.0, 151.0], [16.1, 151.0], [16.2, 152.0], [16.3, 152.0], [16.4, 153.0], [16.5, 153.0], [16.6, 153.0], [16.7, 153.0], [16.8, 154.0], [16.9, 154.0], [17.0, 154.0], [17.1, 154.0], [17.2, 154.0], [17.3, 154.0], [17.4, 155.0], [17.5, 155.0], [17.6, 155.0], [17.7, 155.0], [17.8, 155.0], [17.9, 155.0], [18.0, 155.0], [18.1, 155.0], [18.2, 156.0], [18.3, 156.0], [18.4, 156.0], [18.5, 156.0], [18.6, 156.0], [18.7, 156.0], [18.8, 156.0], [18.9, 156.0], [19.0, 156.0], [19.1, 156.0], [19.2, 156.0], [19.3, 156.0], [19.4, 158.0], [19.5, 158.0], [19.6, 161.0], [19.7, 161.0], [19.8, 161.0], [19.9, 161.0], [20.0, 162.0], [20.1, 162.0], [20.2, 162.0], [20.3, 162.0], [20.4, 162.0], [20.5, 162.0], [20.6, 162.0], [20.7, 162.0], [20.8, 163.0], [20.9, 163.0], [21.0, 163.0], [21.1, 163.0], [21.2, 166.0], [21.3, 166.0], [21.4, 167.0], [21.5, 167.0], [21.6, 167.0], [21.7, 167.0], [21.8, 168.0], [21.9, 168.0], [22.0, 169.0], [22.1, 169.0], [22.2, 170.0], [22.3, 170.0], [22.4, 170.0], [22.5, 170.0], [22.6, 170.0], [22.7, 170.0], [22.8, 171.0], [22.9, 171.0], [23.0, 172.0], [23.1, 172.0], [23.2, 172.0], [23.3, 172.0], [23.4, 175.0], [23.5, 175.0], [23.6, 177.0], [23.7, 177.0], [23.8, 179.0], [23.9, 179.0], [24.0, 179.0], [24.1, 179.0], [24.2, 180.0], [24.3, 180.0], [24.4, 182.0], [24.5, 182.0], [24.6, 187.0], [24.7, 187.0], [24.8, 189.0], [24.9, 189.0], [25.0, 189.0], [25.1, 189.0], [25.2, 190.0], [25.3, 190.0], [25.4, 191.0], [25.5, 191.0], [25.6, 193.0], [25.7, 193.0], [25.8, 195.0], [25.9, 195.0], [26.0, 196.0], [26.1, 196.0], [26.2, 197.0], [26.3, 197.0], [26.4, 198.0], [26.5, 198.0], [26.6, 203.0], [26.7, 203.0], [26.8, 208.0], [26.9, 208.0], [27.0, 212.0], [27.1, 212.0], [27.2, 217.0], [27.3, 217.0], [27.4, 217.0], [27.5, 217.0], [27.6, 221.0], [27.7, 221.0], [27.8, 227.0], [27.9, 227.0], [28.0, 234.0], [28.1, 234.0], [28.2, 236.0], [28.3, 236.0], [28.4, 239.0], [28.5, 239.0], [28.6, 246.0], [28.7, 246.0], [28.8, 250.0], [28.9, 250.0], [29.0, 252.0], [29.1, 252.0], [29.2, 258.0], [29.3, 258.0], [29.4, 259.0], [29.5, 259.0], [29.6, 261.0], [29.7, 261.0], [29.8, 315.0], [29.9, 315.0], [30.0, 336.0], [30.1, 336.0], [30.2, 350.0], [30.3, 350.0], [30.4, 362.0], [30.5, 362.0], [30.6, 365.0], [30.7, 365.0], [30.8, 369.0], [30.9, 369.0], [31.0, 375.0], [31.1, 375.0], [31.2, 377.0], [31.3, 377.0], [31.4, 381.0], [31.5, 381.0], [31.6, 384.0], [31.7, 384.0], [31.8, 390.0], [31.9, 390.0], [32.0, 408.0], [32.1, 408.0], [32.2, 408.0], [32.3, 408.0], [32.4, 409.0], [32.5, 409.0], [32.6, 413.0], [32.7, 413.0], [32.8, 418.0], [32.9, 418.0], [33.0, 421.0], [33.1, 421.0], [33.2, 427.0], [33.3, 427.0], [33.4, 462.0], [33.5, 462.0], [33.6, 468.0], [33.7, 468.0], [33.8, 476.0], [33.9, 476.0], [34.0, 480.0], [34.1, 480.0], [34.2, 486.0], [34.3, 486.0], [34.4, 492.0], [34.5, 492.0], [34.6, 497.0], [34.7, 497.0], [34.8, 504.0], [34.9, 504.0], [35.0, 519.0], [35.1, 519.0], [35.2, 527.0], [35.3, 527.0], [35.4, 527.0], [35.5, 546.0], [35.6, 546.0], [35.7, 546.0], [35.8, 546.0], [35.9, 554.0], [36.0, 554.0], [36.1, 561.0], [36.2, 561.0], [36.3, 565.0], [36.4, 565.0], [36.5, 575.0], [36.6, 575.0], [36.7, 583.0], [36.8, 583.0], [36.9, 590.0], [37.0, 590.0], [37.1, 600.0], [37.2, 600.0], [37.3, 607.0], [37.4, 607.0], [37.5, 623.0], [37.6, 623.0], [37.7, 633.0], [37.8, 633.0], [37.9, 640.0], [38.0, 640.0], [38.1, 647.0], [38.2, 647.0], [38.3, 657.0], [38.4, 657.0], [38.5, 659.0], [38.6, 659.0], [38.7, 667.0], [38.8, 667.0], [38.9, 676.0], [39.0, 676.0], [39.1, 691.0], [39.2, 691.0], [39.3, 696.0], [39.4, 696.0], [39.5, 698.0], [39.6, 698.0], [39.7, 701.0], [39.8, 701.0], [39.9, 701.0], [40.0, 701.0], [40.1, 704.0], [40.2, 704.0], [40.3, 712.0], [40.4, 712.0], [40.5, 720.0], [40.6, 720.0], [40.7, 721.0], [40.8, 721.0], [40.9, 730.0], [41.0, 730.0], [41.1, 742.0], [41.2, 742.0], [41.3, 750.0], [41.4, 750.0], [41.5, 754.0], [41.6, 754.0], [41.7, 764.0], [41.8, 764.0], [41.9, 771.0], [42.0, 771.0], [42.1, 773.0], [42.2, 773.0], [42.3, 783.0], [42.4, 783.0], [42.5, 784.0], [42.6, 784.0], [42.7, 791.0], [42.8, 791.0], [42.9, 794.0], [43.0, 794.0], [43.1, 803.0], [43.2, 803.0], [43.3, 806.0], [43.4, 806.0], [43.5, 816.0], [43.6, 816.0], [43.7, 819.0], [43.8, 819.0], [43.9, 822.0], [44.0, 822.0], [44.1, 833.0], [44.2, 833.0], [44.3, 834.0], [44.4, 834.0], [44.5, 843.0], [44.6, 843.0], [44.7, 844.0], [44.8, 844.0], [44.9, 844.0], [45.0, 844.0], [45.1, 846.0], [45.2, 846.0], [45.3, 849.0], [45.4, 849.0], [45.5, 858.0], [45.6, 858.0], [45.7, 858.0], [45.8, 858.0], [45.9, 862.0], [46.0, 862.0], [46.1, 865.0], [46.2, 865.0], [46.3, 869.0], [46.4, 869.0], [46.5, 875.0], [46.6, 875.0], [46.7, 876.0], [46.8, 876.0], [46.9, 889.0], [47.0, 889.0], [47.1, 890.0], [47.2, 890.0], [47.3, 892.0], [47.4, 892.0], [47.5, 897.0], [47.6, 897.0], [47.7, 898.0], [47.8, 898.0], [47.9, 903.0], [48.0, 903.0], [48.1, 906.0], [48.2, 906.0], [48.3, 907.0], [48.4, 907.0], [48.5, 907.0], [48.6, 907.0], [48.7, 909.0], [48.8, 909.0], [48.9, 914.0], [49.0, 914.0], [49.1, 914.0], [49.2, 914.0], [49.3, 915.0], [49.4, 915.0], [49.5, 918.0], [49.6, 918.0], [49.7, 920.0], [49.8, 920.0], [49.9, 924.0], [50.0, 924.0], [50.1, 930.0], [50.2, 930.0], [50.3, 931.0], [50.4, 931.0], [50.5, 936.0], [50.6, 936.0], [50.7, 936.0], [50.8, 936.0], [50.9, 939.0], [51.0, 939.0], [51.1, 939.0], [51.2, 939.0], [51.3, 945.0], [51.4, 945.0], [51.5, 955.0], [51.6, 955.0], [51.7, 956.0], [51.8, 956.0], [51.9, 962.0], [52.0, 962.0], [52.1, 965.0], [52.2, 965.0], [52.3, 970.0], [52.4, 970.0], [52.5, 977.0], [52.6, 977.0], [52.7, 982.0], [52.8, 982.0], [52.9, 1007.0], [53.0, 1007.0], [53.1, 1008.0], [53.2, 1008.0], [53.3, 1015.0], [53.4, 1015.0], [53.5, 1058.0], [53.6, 1058.0], [53.7, 1063.0], [53.8, 1063.0], [53.9, 1075.0], [54.0, 1075.0], [54.1, 1088.0], [54.2, 1088.0], [54.3, 1095.0], [54.4, 1095.0], [54.5, 1100.0], [54.6, 1100.0], [54.7, 1104.0], [54.8, 1104.0], [54.9, 1107.0], [55.0, 1107.0], [55.1, 1114.0], [55.2, 1114.0], [55.3, 1129.0], [55.4, 1129.0], [55.5, 1131.0], [55.6, 1131.0], [55.7, 1151.0], [55.8, 1151.0], [55.9, 1160.0], [56.0, 1160.0], [56.1, 1161.0], [56.2, 1161.0], [56.3, 1166.0], [56.4, 1166.0], [56.5, 1171.0], [56.6, 1171.0], [56.7, 1171.0], [56.8, 1171.0], [56.9, 1193.0], [57.0, 1193.0], [57.1, 1211.0], [57.2, 1211.0], [57.3, 1239.0], [57.4, 1239.0], [57.5, 1262.0], [57.6, 1262.0], [57.7, 1289.0], [57.8, 1289.0], [57.9, 1301.0], [58.0, 1301.0], [58.1, 1306.0], [58.2, 1306.0], [58.3, 1316.0], [58.4, 1316.0], [58.5, 1316.0], [58.6, 1316.0], [58.7, 1317.0], [58.8, 1317.0], [58.9, 1369.0], [59.0, 1369.0], [59.1, 1371.0], [59.2, 1371.0], [59.3, 1381.0], [59.4, 1381.0], [59.5, 1421.0], [59.6, 1421.0], [59.7, 1424.0], [59.8, 1424.0], [59.9, 1430.0], [60.0, 1430.0], [60.1, 1467.0], [60.2, 1467.0], [60.3, 1475.0], [60.4, 1475.0], [60.5, 1482.0], [60.6, 1482.0], [60.7, 1510.0], [60.8, 1510.0], [60.9, 1521.0], [61.0, 1521.0], [61.1, 1523.0], [61.2, 1523.0], [61.3, 1523.0], [61.4, 1523.0], [61.5, 1546.0], [61.6, 1546.0], [61.7, 1560.0], [61.8, 1560.0], [61.9, 1562.0], [62.0, 1562.0], [62.1, 1583.0], [62.2, 1583.0], [62.3, 1600.0], [62.4, 1600.0], [62.5, 1613.0], [62.6, 1613.0], [62.7, 1653.0], [62.8, 1653.0], [62.9, 1660.0], [63.0, 1660.0], [63.1, 1671.0], [63.2, 1671.0], [63.3, 1707.0], [63.4, 1707.0], [63.5, 1740.0], [63.6, 1740.0], [63.7, 1741.0], [63.8, 1741.0], [63.9, 1747.0], [64.0, 1747.0], [64.1, 1749.0], [64.2, 1749.0], [64.3, 1755.0], [64.4, 1755.0], [64.5, 1759.0], [64.6, 1759.0], [64.7, 1760.0], [64.8, 1760.0], [64.9, 1774.0], [65.0, 1774.0], [65.1, 1777.0], [65.2, 1777.0], [65.3, 1790.0], [65.4, 1790.0], [65.5, 1791.0], [65.6, 1791.0], [65.7, 1796.0], [65.8, 1796.0], [65.9, 1802.0], [66.0, 1802.0], [66.1, 1805.0], [66.2, 1805.0], [66.3, 1808.0], [66.4, 1808.0], [66.5, 1809.0], [66.6, 1809.0], [66.7, 1811.0], [66.8, 1811.0], [66.9, 1828.0], [67.0, 1828.0], [67.1, 1830.0], [67.2, 1830.0], [67.3, 1840.0], [67.4, 1840.0], [67.5, 1855.0], [67.6, 1855.0], [67.7, 1864.0], [67.8, 1864.0], [67.9, 1866.0], [68.0, 1866.0], [68.1, 1866.0], [68.2, 1866.0], [68.3, 1890.0], [68.4, 1890.0], [68.5, 1909.0], [68.6, 1909.0], [68.7, 1923.0], [68.8, 1923.0], [68.9, 1926.0], [69.0, 1926.0], [69.1, 1944.0], [69.2, 1944.0], [69.3, 1952.0], [69.4, 1952.0], [69.5, 1960.0], [69.6, 1960.0], [69.7, 1960.0], [69.8, 1960.0], [69.9, 1969.0], [70.0, 1969.0], [70.1, 1980.0], [70.2, 1980.0], [70.3, 1988.0], [70.4, 1988.0], [70.5, 1989.0], [70.6, 1989.0], [70.7, 2006.0], [70.8, 2006.0], [70.9, 2019.0], [71.0, 2019.0], [71.1, 2020.0], [71.2, 2020.0], [71.3, 2029.0], [71.4, 2029.0], [71.5, 2030.0], [71.6, 2030.0], [71.7, 2049.0], [71.8, 2049.0], [71.9, 2053.0], [72.0, 2053.0], [72.1, 2054.0], [72.2, 2054.0], [72.3, 2064.0], [72.4, 2064.0], [72.5, 2078.0], [72.6, 2078.0], [72.7, 2078.0], [72.8, 2078.0], [72.9, 2102.0], [73.0, 2102.0], [73.1, 2116.0], [73.2, 2116.0], [73.3, 2117.0], [73.4, 2117.0], [73.5, 2121.0], [73.6, 2121.0], [73.7, 2134.0], [73.8, 2134.0], [73.9, 2142.0], [74.0, 2142.0], [74.1, 2150.0], [74.2, 2150.0], [74.3, 2170.0], [74.4, 2170.0], [74.5, 2189.0], [74.6, 2189.0], [74.7, 2195.0], [74.8, 2195.0], [74.9, 2199.0], [75.0, 2199.0], [75.1, 2223.0], [75.2, 2223.0], [75.3, 2268.0], [75.4, 2268.0], [75.5, 2269.0], [75.6, 2269.0], [75.7, 2270.0], [75.8, 2270.0], [75.9, 2282.0], [76.0, 2282.0], [76.1, 2286.0], [76.2, 2286.0], [76.3, 2287.0], [76.4, 2287.0], [76.5, 2292.0], [76.6, 2292.0], [76.7, 2317.0], [76.8, 2317.0], [76.9, 2337.0], [77.0, 2337.0], [77.1, 2348.0], [77.2, 2348.0], [77.3, 2367.0], [77.4, 2367.0], [77.5, 2414.0], [77.6, 2414.0], [77.7, 2423.0], [77.8, 2423.0], [77.9, 2458.0], [78.0, 2458.0], [78.1, 2463.0], [78.2, 2463.0], [78.3, 2490.0], [78.4, 2490.0], [78.5, 2505.0], [78.6, 2505.0], [78.7, 2527.0], [78.8, 2527.0], [78.9, 2563.0], [79.0, 2563.0], [79.1, 2564.0], [79.2, 2564.0], [79.3, 2574.0], [79.4, 2574.0], [79.5, 2579.0], [79.6, 2579.0], [79.7, 2611.0], [79.8, 2611.0], [79.9, 2611.0], [80.0, 2611.0], [80.1, 2611.0], [80.2, 2611.0], [80.3, 2613.0], [80.4, 2613.0], [80.5, 2660.0], [80.6, 2660.0], [80.7, 2673.0], [80.8, 2673.0], [80.9, 2701.0], [81.0, 2701.0], [81.1, 2707.0], [81.2, 2707.0], [81.3, 2714.0], [81.4, 2714.0], [81.5, 2722.0], [81.6, 2722.0], [81.7, 2776.0], [81.8, 2776.0], [81.9, 2826.0], [82.0, 2826.0], [82.1, 2845.0], [82.2, 2845.0], [82.3, 2858.0], [82.4, 2858.0], [82.5, 2877.0], [82.6, 2877.0], [82.7, 2951.0], [82.8, 2951.0], [82.9, 2984.0], [83.0, 2984.0], [83.1, 3021.0], [83.2, 3021.0], [83.3, 3328.0], [83.4, 3328.0], [83.5, 3593.0], [83.6, 3593.0], [83.7, 3594.0], [83.8, 3594.0], [83.9, 3619.0], [84.0, 3619.0], [84.1, 3693.0], [84.2, 3693.0], [84.3, 3705.0], [84.4, 3705.0], [84.5, 3757.0], [84.6, 3757.0], [84.7, 3792.0], [84.8, 3792.0], [84.9, 3834.0], [85.0, 3834.0], [85.1, 3852.0], [85.2, 3852.0], [85.3, 3880.0], [85.4, 3880.0], [85.5, 3883.0], [85.6, 3883.0], [85.7, 3887.0], [85.8, 3887.0], [85.9, 3904.0], [86.0, 3904.0], [86.1, 3912.0], [86.2, 3912.0], [86.3, 3922.0], [86.4, 3922.0], [86.5, 3926.0], [86.6, 3926.0], [86.7, 3939.0], [86.8, 3939.0], [86.9, 3941.0], [87.0, 3941.0], [87.1, 3952.0], [87.2, 3952.0], [87.3, 3966.0], [87.4, 3966.0], [87.5, 3968.0], [87.6, 3968.0], [87.7, 3979.0], [87.8, 3979.0], [87.9, 3982.0], [88.0, 3982.0], [88.1, 3984.0], [88.2, 3984.0], [88.3, 3992.0], [88.4, 3992.0], [88.5, 4008.0], [88.6, 4008.0], [88.7, 4008.0], [88.8, 4008.0], [88.9, 4015.0], [89.0, 4015.0], [89.1, 4015.0], [89.2, 4015.0], [89.3, 4017.0], [89.4, 4017.0], [89.5, 4021.0], [89.6, 4021.0], [89.7, 4026.0], [89.8, 4026.0], [89.9, 4032.0], [90.0, 4032.0], [90.1, 4037.0], [90.2, 4037.0], [90.3, 4037.0], [90.4, 4037.0], [90.5, 4042.0], [90.6, 4042.0], [90.7, 4045.0], [90.8, 4045.0], [90.9, 4045.0], [91.0, 4045.0], [91.1, 4064.0], [91.2, 4064.0], [91.3, 4080.0], [91.4, 4080.0], [91.5, 4084.0], [91.6, 4084.0], [91.7, 4109.0], [91.8, 4109.0], [91.9, 4123.0], [92.0, 4123.0], [92.1, 4139.0], [92.2, 4139.0], [92.3, 4148.0], [92.4, 4148.0], [92.5, 4155.0], [92.6, 4155.0], [92.7, 4172.0], [92.8, 4172.0], [92.9, 4179.0], [93.0, 4179.0], [93.1, 4183.0], [93.2, 4183.0], [93.3, 4191.0], [93.4, 4191.0], [93.5, 4218.0], [93.6, 4218.0], [93.7, 4244.0], [93.8, 4244.0], [93.9, 4249.0], [94.0, 4249.0], [94.1, 4252.0], [94.2, 4252.0], [94.3, 4254.0], [94.4, 4254.0], [94.5, 4254.0], [94.6, 4254.0], [94.7, 4259.0], [94.8, 4259.0], [94.9, 4293.0], [95.0, 4293.0], [95.1, 4351.0], [95.2, 4351.0], [95.3, 4353.0], [95.4, 4353.0], [95.5, 4390.0], [95.6, 4390.0], [95.7, 4415.0], [95.8, 4415.0], [95.9, 4444.0], [96.0, 4444.0], [96.1, 4500.0], [96.2, 4500.0], [96.3, 4507.0], [96.4, 4507.0], [96.5, 5043.0], [96.6, 5043.0], [96.7, 5214.0], [96.8, 5214.0], [96.9, 12518.0], [97.0, 12518.0], [97.1, 13299.0], [97.2, 13299.0], [97.3, 13352.0], [97.4, 13352.0], [97.5, 14554.0], [97.6, 14554.0], [97.7, 14558.0], [97.8, 14558.0], [97.9, 15105.0], [98.0, 15105.0], [98.1, 15935.0], [98.2, 15935.0], [98.3, 16013.0], [98.4, 16013.0], [98.5, 16097.0], [98.6, 16097.0], [98.7, 16156.0], [98.8, 16156.0], [98.9, 16545.0], [99.0, 16545.0], [99.1, 16858.0], [99.2, 16858.0], [99.3, 16975.0], [99.4, 16975.0], [99.5, 17260.0], [99.6, 17260.0], [99.7, 17288.0], [99.8, 17288.0], [99.9, 17613.0], [100.0, 17613.0]], "isOverall": false, "label": "Login-page", "isController": false}, {"data": [[0.0, 26.0], [0.1, 26.0], [0.2, 26.0], [0.3, 26.0], [0.4, 27.0], [0.5, 27.0], [0.6, 27.0], [0.7, 27.0], [0.8, 27.0], [0.9, 27.0], [1.0, 27.0], [1.1, 27.0], [1.2, 27.0], [1.3, 27.0], [1.4, 28.0], [1.5, 28.0], [1.6, 28.0], [1.7, 28.0], [1.8, 28.0], [1.9, 28.0], [2.0, 28.0], [2.1, 28.0], [2.2, 28.0], [2.3, 28.0], [2.4, 28.0], [2.5, 28.0], [2.6, 28.0], [2.7, 28.0], [2.8, 28.0], [2.9, 28.0], [3.0, 28.0], [3.1, 28.0], [3.2, 28.0], [3.3, 28.0], [3.4, 29.0], [3.5, 29.0], [3.6, 29.0], [3.7, 29.0], [3.8, 29.0], [3.9, 29.0], [4.0, 29.0], [4.1, 29.0], [4.2, 29.0], [4.3, 29.0], [4.4, 29.0], [4.5, 29.0], [4.6, 29.0], [4.7, 29.0], [4.8, 30.0], [4.9, 30.0], [5.0, 30.0], [5.1, 30.0], [5.2, 30.0], [5.3, 30.0], [5.4, 30.0], [5.5, 30.0], [5.6, 30.0], [5.7, 30.0], [5.8, 30.0], [5.9, 30.0], [6.0, 30.0], [6.1, 30.0], [6.2, 30.0], [6.3, 30.0], [6.4, 31.0], [6.5, 31.0], [6.6, 31.0], [6.7, 31.0], [6.8, 31.0], [6.9, 31.0], [7.0, 31.0], [7.1, 31.0], [7.2, 31.0], [7.3, 31.0], [7.4, 31.0], [7.5, 31.0], [7.6, 31.0], [7.7, 31.0], [7.8, 31.0], [7.9, 32.0], [8.0, 32.0], [8.1, 32.0], [8.2, 32.0], [8.3, 32.0], [8.4, 32.0], [8.5, 32.0], [8.6, 32.0], [8.7, 32.0], [8.8, 32.0], [8.9, 32.0], [9.0, 32.0], [9.1, 32.0], [9.2, 32.0], [9.3, 32.0], [9.4, 32.0], [9.5, 32.0], [9.6, 32.0], [9.7, 32.0], [9.8, 32.0], [9.9, 32.0], [10.0, 32.0], [10.1, 32.0], [10.2, 32.0], [10.3, 32.0], [10.4, 32.0], [10.5, 32.0], [10.6, 32.0], [10.7, 32.0], [10.8, 32.0], [10.9, 32.0], [11.0, 32.0], [11.1, 32.0], [11.2, 32.0], [11.3, 32.0], [11.4, 33.0], [11.5, 33.0], [11.6, 33.0], [11.7, 33.0], [11.8, 33.0], [11.9, 33.0], [12.0, 33.0], [12.1, 33.0], [12.2, 33.0], [12.3, 33.0], [12.4, 33.0], [12.5, 33.0], [12.6, 33.0], [12.7, 33.0], [12.8, 33.0], [12.9, 33.0], [13.0, 34.0], [13.1, 34.0], [13.2, 34.0], [13.3, 34.0], [13.4, 34.0], [13.5, 34.0], [13.6, 34.0], [13.7, 34.0], [13.8, 34.0], [13.9, 34.0], [14.0, 34.0], [14.1, 34.0], [14.2, 34.0], [14.3, 34.0], [14.4, 35.0], [14.5, 35.0], [14.6, 35.0], [14.7, 35.0], [14.8, 35.0], [14.9, 35.0], [15.0, 35.0], [15.1, 35.0], [15.2, 35.0], [15.3, 35.0], [15.4, 35.0], [15.5, 35.0], [15.6, 35.0], [15.7, 35.0], [15.8, 35.0], [15.9, 35.0], [16.0, 35.0], [16.1, 35.0], [16.2, 35.0], [16.3, 35.0], [16.4, 35.0], [16.5, 35.0], [16.6, 35.0], [16.7, 35.0], [16.8, 36.0], [16.9, 36.0], [17.0, 36.0], [17.1, 36.0], [17.2, 36.0], [17.3, 36.0], [17.4, 36.0], [17.5, 36.0], [17.6, 36.0], [17.7, 36.0], [17.8, 36.0], [17.9, 36.0], [18.0, 36.0], [18.1, 36.0], [18.2, 36.0], [18.3, 36.0], [18.4, 36.0], [18.5, 36.0], [18.6, 36.0], [18.7, 36.0], [18.8, 36.0], [18.9, 36.0], [19.0, 36.0], [19.1, 36.0], [19.2, 37.0], [19.3, 37.0], [19.4, 37.0], [19.5, 37.0], [19.6, 37.0], [19.7, 37.0], [19.8, 37.0], [19.9, 37.0], [20.0, 37.0], [20.1, 37.0], [20.2, 37.0], [20.3, 37.0], [20.4, 37.0], [20.5, 37.0], [20.6, 37.0], [20.7, 37.0], [20.8, 37.0], [20.9, 37.0], [21.0, 38.0], [21.1, 38.0], [21.2, 38.0], [21.3, 38.0], [21.4, 38.0], [21.5, 38.0], [21.6, 38.0], [21.7, 38.0], [21.8, 38.0], [21.9, 38.0], [22.0, 38.0], [22.1, 38.0], [22.2, 38.0], [22.3, 38.0], [22.4, 38.0], [22.5, 38.0], [22.6, 38.0], [22.7, 38.0], [22.8, 38.0], [22.9, 38.0], [23.0, 38.0], [23.1, 38.0], [23.2, 38.0], [23.3, 38.0], [23.4, 39.0], [23.5, 39.0], [23.6, 39.0], [23.7, 39.0], [23.8, 39.0], [23.9, 39.0], [24.0, 39.0], [24.1, 39.0], [24.2, 39.0], [24.3, 39.0], [24.4, 39.0], [24.5, 39.0], [24.6, 40.0], [24.7, 40.0], [24.8, 40.0], [24.9, 40.0], [25.0, 40.0], [25.1, 40.0], [25.2, 40.0], [25.3, 40.0], [25.4, 40.0], [25.5, 40.0], [25.6, 40.0], [25.7, 40.0], [25.8, 40.0], [25.9, 40.0], [26.0, 40.0], [26.1, 40.0], [26.2, 40.0], [26.3, 40.0], [26.4, 40.0], [26.5, 40.0], [26.6, 40.0], [26.7, 40.0], [26.8, 41.0], [26.9, 41.0], [27.0, 41.0], [27.1, 41.0], [27.2, 41.0], [27.3, 41.0], [27.4, 41.0], [27.5, 41.0], [27.6, 41.0], [27.7, 41.0], [27.8, 41.0], [27.9, 41.0], [28.0, 41.0], [28.1, 41.0], [28.2, 41.0], [28.3, 41.0], [28.4, 41.0], [28.5, 41.0], [28.6, 42.0], [28.7, 42.0], [28.8, 42.0], [28.9, 42.0], [29.0, 42.0], [29.1, 42.0], [29.2, 42.0], [29.3, 42.0], [29.4, 42.0], [29.5, 42.0], [29.6, 43.0], [29.7, 43.0], [29.8, 43.0], [29.9, 43.0], [30.0, 43.0], [30.1, 43.0], [30.2, 43.0], [30.3, 43.0], [30.4, 43.0], [30.5, 43.0], [30.6, 43.0], [30.7, 43.0], [30.8, 43.0], [30.9, 43.0], [31.0, 44.0], [31.1, 44.0], [31.2, 44.0], [31.3, 44.0], [31.4, 45.0], [31.5, 45.0], [31.6, 45.0], [31.7, 45.0], [31.8, 46.0], [31.9, 46.0], [32.0, 46.0], [32.1, 46.0], [32.2, 46.0], [32.3, 46.0], [32.4, 47.0], [32.5, 47.0], [32.6, 47.0], [32.7, 47.0], [32.8, 47.0], [32.9, 47.0], [33.0, 47.0], [33.1, 47.0], [33.2, 47.0], [33.3, 47.0], [33.4, 47.0], [33.5, 47.0], [33.6, 47.0], [33.7, 47.0], [33.8, 48.0], [33.9, 48.0], [34.0, 48.0], [34.1, 48.0], [34.2, 48.0], [34.3, 48.0], [34.4, 48.0], [34.5, 48.0], [34.6, 49.0], [34.7, 49.0], [34.8, 49.0], [34.9, 49.0], [35.0, 49.0], [35.1, 49.0], [35.2, 50.0], [35.3, 50.0], [35.4, 50.0], [35.5, 50.0], [35.6, 51.0], [35.7, 51.0], [35.8, 51.0], [35.9, 51.0], [36.0, 51.0], [36.1, 51.0], [36.2, 52.0], [36.3, 52.0], [36.4, 52.0], [36.5, 52.0], [36.6, 52.0], [36.7, 52.0], [36.8, 52.0], [36.9, 52.0], [37.0, 53.0], [37.1, 53.0], [37.2, 53.0], [37.3, 53.0], [37.4, 53.0], [37.5, 53.0], [37.6, 54.0], [37.7, 54.0], [37.8, 54.0], [37.9, 54.0], [38.0, 55.0], [38.1, 55.0], [38.2, 55.0], [38.3, 55.0], [38.4, 55.0], [38.5, 55.0], [38.6, 55.0], [38.7, 55.0], [38.8, 55.0], [38.9, 55.0], [39.0, 56.0], [39.1, 56.0], [39.2, 56.0], [39.3, 56.0], [39.4, 57.0], [39.5, 57.0], [39.6, 57.0], [39.7, 57.0], [39.8, 57.0], [39.9, 57.0], [40.0, 58.0], [40.1, 58.0], [40.2, 58.0], [40.3, 58.0], [40.4, 58.0], [40.5, 58.0], [40.6, 58.0], [40.7, 58.0], [40.8, 59.0], [40.9, 59.0], [41.0, 59.0], [41.1, 59.0], [41.2, 59.0], [41.3, 59.0], [41.4, 60.0], [41.5, 60.0], [41.6, 60.0], [41.7, 60.0], [41.8, 60.0], [41.9, 60.0], [42.0, 60.0], [42.1, 60.0], [42.2, 61.0], [42.3, 61.0], [42.4, 61.0], [42.5, 61.0], [42.6, 61.0], [42.7, 61.0], [42.8, 62.0], [42.9, 62.0], [43.0, 62.0], [43.1, 62.0], [43.2, 62.0], [43.3, 62.0], [43.4, 62.0], [43.5, 62.0], [43.6, 63.0], [43.7, 63.0], [43.8, 65.0], [43.9, 65.0], [44.0, 66.0], [44.1, 66.0], [44.2, 68.0], [44.3, 68.0], [44.4, 68.0], [44.5, 68.0], [44.6, 70.0], [44.7, 70.0], [44.8, 70.0], [44.9, 70.0], [45.0, 72.0], [45.1, 72.0], [45.2, 72.0], [45.3, 72.0], [45.4, 72.0], [45.5, 72.0], [45.6, 74.0], [45.7, 74.0], [45.8, 74.0], [45.9, 74.0], [46.0, 74.0], [46.1, 74.0], [46.2, 75.0], [46.3, 75.0], [46.4, 76.0], [46.5, 76.0], [46.6, 77.0], [46.7, 77.0], [46.8, 78.0], [46.9, 78.0], [47.0, 78.0], [47.1, 78.0], [47.2, 78.0], [47.3, 78.0], [47.4, 79.0], [47.5, 79.0], [47.6, 79.0], [47.7, 79.0], [47.8, 80.0], [47.9, 80.0], [48.0, 81.0], [48.1, 81.0], [48.2, 81.0], [48.3, 81.0], [48.4, 81.0], [48.5, 81.0], [48.6, 82.0], [48.7, 82.0], [48.8, 82.0], [48.9, 83.0], [49.0, 83.0], [49.1, 85.0], [49.2, 85.0], [49.3, 85.0], [49.4, 85.0], [49.5, 85.0], [49.6, 85.0], [49.7, 85.0], [49.8, 85.0], [49.9, 86.0], [50.0, 86.0], [50.1, 86.0], [50.2, 88.0], [50.3, 88.0], [50.4, 88.0], [50.5, 89.0], [50.6, 89.0], [50.7, 90.0], [50.8, 90.0], [50.9, 90.0], [51.0, 90.0], [51.1, 91.0], [51.2, 91.0], [51.3, 157.0], [51.4, 157.0], [51.5, 162.0], [51.6, 162.0], [51.7, 164.0], [51.8, 164.0], [51.9, 165.0], [52.0, 165.0], [52.1, 165.0], [52.2, 165.0], [52.3, 169.0], [52.4, 169.0], [52.5, 170.0], [52.6, 170.0], [52.7, 173.0], [52.8, 173.0], [52.9, 173.0], [53.0, 173.0], [53.1, 173.0], [53.2, 173.0], [53.3, 175.0], [53.4, 175.0], [53.5, 175.0], [53.6, 175.0], [53.7, 175.0], [53.8, 175.0], [53.9, 178.0], [54.0, 178.0], [54.1, 183.0], [54.2, 183.0], [54.3, 183.0], [54.4, 183.0], [54.5, 184.0], [54.6, 184.0], [54.7, 187.0], [54.8, 187.0], [54.9, 187.0], [55.0, 187.0], [55.1, 187.0], [55.2, 187.0], [55.3, 188.0], [55.4, 188.0], [55.5, 189.0], [55.6, 189.0], [55.7, 189.0], [55.8, 189.0], [55.9, 190.0], [56.0, 190.0], [56.1, 191.0], [56.2, 191.0], [56.3, 193.0], [56.4, 193.0], [56.5, 193.0], [56.6, 193.0], [56.7, 194.0], [56.8, 194.0], [56.9, 194.0], [57.0, 194.0], [57.1, 194.0], [57.2, 194.0], [57.3, 194.0], [57.4, 194.0], [57.5, 195.0], [57.6, 195.0], [57.7, 197.0], [57.8, 197.0], [57.9, 197.0], [58.0, 197.0], [58.1, 199.0], [58.2, 199.0], [58.3, 206.0], [58.4, 206.0], [58.5, 213.0], [58.6, 213.0], [58.7, 213.0], [58.8, 213.0], [58.9, 230.0], [59.0, 230.0], [59.1, 310.0], [59.2, 310.0], [59.3, 312.0], [59.4, 312.0], [59.5, 314.0], [59.6, 314.0], [59.7, 320.0], [59.8, 320.0], [59.9, 326.0], [60.0, 326.0], [60.1, 481.0], [60.2, 481.0], [60.3, 518.0], [60.4, 518.0], [60.5, 518.0], [60.6, 518.0], [60.7, 536.0], [60.8, 536.0], [60.9, 676.0], [61.0, 676.0], [61.1, 702.0], [61.2, 702.0], [61.3, 713.0], [61.4, 713.0], [61.5, 715.0], [61.6, 715.0], [61.7, 853.0], [61.8, 853.0], [61.9, 884.0], [62.0, 884.0], [62.1, 954.0], [62.2, 954.0], [62.3, 1115.0], [62.4, 1115.0], [62.5, 1781.0], [62.6, 1781.0], [62.7, 1781.0], [62.8, 1781.0], [62.9, 1788.0], [63.0, 1788.0], [63.1, 1794.0], [63.2, 1794.0], [63.3, 1801.0], [63.4, 1801.0], [63.5, 1806.0], [63.6, 1806.0], [63.7, 1812.0], [63.8, 1812.0], [63.9, 1884.0], [64.0, 1884.0], [64.1, 1886.0], [64.2, 1886.0], [64.3, 1903.0], [64.4, 1903.0], [64.5, 1904.0], [64.6, 1904.0], [64.7, 1943.0], [64.8, 1943.0], [64.9, 1982.0], [65.0, 1982.0], [65.1, 2023.0], [65.2, 2023.0], [65.3, 2102.0], [65.4, 2102.0], [65.5, 2221.0], [65.6, 2221.0], [65.7, 2235.0], [65.8, 2235.0], [65.9, 2282.0], [66.0, 2282.0], [66.1, 2301.0], [66.2, 2301.0], [66.3, 2387.0], [66.4, 2387.0], [66.5, 2420.0], [66.6, 2420.0], [66.7, 2424.0], [66.8, 2424.0], [66.9, 2479.0], [67.0, 2479.0], [67.1, 2594.0], [67.2, 2594.0], [67.3, 2632.0], [67.4, 2632.0], [67.5, 2727.0], [67.6, 2727.0], [67.7, 2727.0], [67.8, 2727.0], [67.9, 2771.0], [68.0, 2771.0], [68.1, 2791.0], [68.2, 2791.0], [68.3, 2893.0], [68.4, 2893.0], [68.5, 2894.0], [68.6, 2894.0], [68.7, 2921.0], [68.8, 2921.0], [68.9, 2935.0], [69.0, 2935.0], [69.1, 2968.0], [69.2, 2968.0], [69.3, 3002.0], [69.4, 3002.0], [69.5, 3149.0], [69.6, 3149.0], [69.7, 3180.0], [69.8, 3180.0], [69.9, 3252.0], [70.0, 3252.0], [70.1, 3342.0], [70.2, 3342.0], [70.3, 3409.0], [70.4, 3409.0], [70.5, 3669.0], [70.6, 3669.0], [70.7, 3767.0], [70.8, 3767.0], [70.9, 3795.0], [71.0, 3795.0], [71.1, 3816.0], [71.2, 3816.0], [71.3, 3818.0], [71.4, 3818.0], [71.5, 3822.0], [71.6, 3822.0], [71.7, 3833.0], [71.8, 3833.0], [71.9, 3840.0], [72.0, 3840.0], [72.1, 3842.0], [72.2, 3842.0], [72.3, 3844.0], [72.4, 3844.0], [72.5, 3846.0], [72.6, 3846.0], [72.7, 3873.0], [72.8, 3873.0], [72.9, 3897.0], [73.0, 3897.0], [73.1, 3900.0], [73.2, 3900.0], [73.3, 3904.0], [73.4, 3904.0], [73.5, 3912.0], [73.6, 3912.0], [73.7, 3915.0], [73.8, 3915.0], [73.9, 3919.0], [74.0, 3919.0], [74.1, 3938.0], [74.2, 3938.0], [74.3, 3945.0], [74.4, 3945.0], [74.5, 3946.0], [74.6, 3946.0], [74.7, 3952.0], [74.8, 3952.0], [74.9, 4005.0], [75.0, 4005.0], [75.1, 4043.0], [75.2, 4043.0], [75.3, 4049.0], [75.4, 4049.0], [75.5, 4162.0], [75.6, 4162.0], [75.7, 4165.0], [75.8, 4165.0], [75.9, 4205.0], [76.0, 4205.0], [76.1, 4268.0], [76.2, 4268.0], [76.3, 4269.0], [76.4, 4269.0], [76.5, 4382.0], [76.6, 4382.0], [76.7, 5160.0], [76.8, 5160.0], [76.9, 5599.0], [77.0, 5599.0], [77.1, 5778.0], [77.2, 5778.0], [77.3, 5798.0], [77.4, 5798.0], [77.5, 6304.0], [77.6, 6304.0], [77.7, 7131.0], [77.8, 7131.0], [77.9, 7196.0], [78.0, 7196.0], [78.1, 7198.0], [78.2, 7198.0], [78.3, 7236.0], [78.4, 7236.0], [78.5, 7241.0], [78.6, 7241.0], [78.7, 7255.0], [78.8, 7255.0], [78.9, 7292.0], [79.0, 7292.0], [79.1, 7338.0], [79.2, 7338.0], [79.3, 7341.0], [79.4, 7341.0], [79.5, 7409.0], [79.6, 7409.0], [79.7, 7410.0], [79.8, 7410.0], [79.9, 7459.0], [80.0, 7459.0], [80.1, 7540.0], [80.2, 7540.0], [80.3, 7661.0], [80.4, 7661.0], [80.5, 7671.0], [80.6, 7671.0], [80.7, 7876.0], [80.8, 7876.0], [80.9, 7956.0], [81.0, 7956.0], [81.1, 7984.0], [81.2, 7984.0], [81.3, 7998.0], [81.4, 7998.0], [81.5, 8136.0], [81.6, 8136.0], [81.7, 8240.0], [81.8, 8240.0], [81.9, 8283.0], [82.0, 8283.0], [82.1, 8549.0], [82.2, 8549.0], [82.3, 8621.0], [82.4, 8621.0], [82.5, 8640.0], [82.6, 8640.0], [82.7, 8653.0], [82.8, 8653.0], [82.9, 8719.0], [83.0, 8719.0], [83.1, 8732.0], [83.2, 8732.0], [83.3, 8890.0], [83.4, 8890.0], [83.5, 8940.0], [83.6, 8940.0], [83.7, 8964.0], [83.8, 8964.0], [83.9, 8969.0], [84.0, 8969.0], [84.1, 9003.0], [84.2, 9003.0], [84.3, 9053.0], [84.4, 9053.0], [84.5, 9156.0], [84.6, 9156.0], [84.7, 9162.0], [84.8, 9162.0], [84.9, 9167.0], [85.0, 9167.0], [85.1, 9181.0], [85.2, 9181.0], [85.3, 9194.0], [85.4, 9194.0], [85.5, 9203.0], [85.6, 9203.0], [85.7, 9213.0], [85.8, 9213.0], [85.9, 9213.0], [86.0, 9213.0], [86.1, 9224.0], [86.2, 9224.0], [86.3, 9244.0], [86.4, 9244.0], [86.5, 9248.0], [86.6, 9248.0], [86.7, 9263.0], [86.8, 9263.0], [86.9, 9285.0], [87.0, 9285.0], [87.1, 9291.0], [87.2, 9291.0], [87.3, 9295.0], [87.4, 9295.0], [87.5, 9296.0], [87.6, 9296.0], [87.7, 9296.0], [87.8, 9296.0], [87.9, 9302.0], [88.0, 9302.0], [88.1, 9317.0], [88.2, 9317.0], [88.3, 9357.0], [88.4, 9357.0], [88.5, 9378.0], [88.6, 9378.0], [88.7, 9378.0], [88.8, 9378.0], [88.9, 9392.0], [89.0, 9392.0], [89.1, 9393.0], [89.2, 9393.0], [89.3, 9412.0], [89.4, 9412.0], [89.5, 9424.0], [89.6, 9424.0], [89.7, 9453.0], [89.8, 9453.0], [89.9, 9455.0], [90.0, 9455.0], [90.1, 9456.0], [90.2, 9456.0], [90.3, 9464.0], [90.4, 9464.0], [90.5, 9469.0], [90.6, 9469.0], [90.7, 9546.0], [90.8, 9546.0], [90.9, 9578.0], [91.0, 9578.0], [91.1, 9582.0], [91.2, 9582.0], [91.3, 9594.0], [91.4, 9594.0], [91.5, 9597.0], [91.6, 9597.0], [91.7, 9611.0], [91.8, 9611.0], [91.9, 9651.0], [92.0, 9651.0], [92.1, 9670.0], [92.2, 9670.0], [92.3, 9684.0], [92.4, 9684.0], [92.5, 9697.0], [92.6, 9697.0], [92.7, 9711.0], [92.8, 9711.0], [92.9, 9734.0], [93.0, 9734.0], [93.1, 9818.0], [93.2, 9818.0], [93.3, 9851.0], [93.4, 9851.0], [93.5, 9864.0], [93.6, 9864.0], [93.7, 9962.0], [93.8, 9962.0], [93.9, 9975.0], [94.0, 9975.0], [94.1, 9977.0], [94.2, 9977.0], [94.3, 9984.0], [94.4, 9984.0], [94.5, 9989.0], [94.6, 9989.0], [94.7, 10066.0], [94.8, 10066.0], [94.9, 10089.0], [95.0, 10089.0], [95.1, 10098.0], [95.2, 10098.0], [95.3, 10104.0], [95.4, 10104.0], [95.5, 10135.0], [95.6, 10135.0], [95.7, 10151.0], [95.8, 10151.0], [95.9, 10171.0], [96.0, 10171.0], [96.1, 10189.0], [96.2, 10189.0], [96.3, 10197.0], [96.4, 10197.0], [96.5, 10269.0], [96.6, 10269.0], [96.7, 10318.0], [96.8, 10318.0], [96.9, 10365.0], [97.0, 10365.0], [97.1, 10371.0], [97.2, 10371.0], [97.3, 10391.0], [97.4, 10391.0], [97.5, 10451.0], [97.6, 10451.0], [97.7, 13948.0], [97.8, 13948.0], [97.9, 14604.0], [98.0, 14604.0], [98.1, 14683.0], [98.2, 14683.0], [98.3, 15065.0], [98.4, 15065.0], [98.5, 15084.0], [98.6, 15084.0], [98.7, 15768.0], [98.8, 15768.0], [98.9, 16915.0], [99.0, 16915.0], [99.1, 17119.0], [99.2, 17119.0], [99.3, 17294.0], [99.4, 17294.0], [99.5, 18483.0], [99.6, 18483.0], [99.7, 19120.0], [99.8, 19120.0], [99.9, 21059.0], [100.0, 21059.0]], "isOverall": false, "label": "Home", "isController": false}, {"data": [[0.0, 329.0], [0.1, 329.0], [0.2, 329.0], [0.3, 329.0], [0.4, 329.0], [0.5, 329.0], [0.6, 364.0], [0.7, 364.0], [0.8, 364.0], [0.9, 364.0], [1.0, 364.0], [1.1, 364.0], [1.2, 380.0], [1.3, 380.0], [1.4, 380.0], [1.5, 380.0], [1.6, 380.0], [1.7, 380.0], [1.8, 412.0], [1.9, 412.0], [2.0, 412.0], [2.1, 412.0], [2.2, 412.0], [2.3, 412.0], [2.4, 462.0], [2.5, 462.0], [2.6, 462.0], [2.7, 462.0], [2.8, 462.0], [2.9, 462.0], [3.0, 488.0], [3.1, 488.0], [3.2, 488.0], [3.3, 488.0], [3.4, 488.0], [3.5, 488.0], [3.6, 546.0], [3.7, 546.0], [3.8, 546.0], [3.9, 546.0], [4.0, 546.0], [4.1, 546.0], [4.2, 783.0], [4.3, 783.0], [4.4, 783.0], [4.5, 783.0], [4.6, 783.0], [4.7, 783.0], [4.8, 1702.0], [4.9, 1702.0], [5.0, 1702.0], [5.1, 1702.0], [5.2, 1702.0], [5.3, 1703.0], [5.4, 1703.0], [5.5, 1703.0], [5.6, 1703.0], [5.7, 1703.0], [5.8, 1703.0], [5.9, 1703.0], [6.0, 1703.0], [6.1, 1703.0], [6.2, 1703.0], [6.3, 1703.0], [6.4, 1703.0], [6.5, 1703.0], [6.6, 1703.0], [6.7, 1703.0], [6.8, 1703.0], [6.9, 1703.0], [7.0, 1703.0], [7.1, 1704.0], [7.2, 1704.0], [7.3, 1704.0], [7.4, 1704.0], [7.5, 1704.0], [7.6, 1704.0], [7.7, 1718.0], [7.8, 1718.0], [7.9, 1718.0], [8.0, 1718.0], [8.1, 1718.0], [8.2, 1718.0], [8.3, 1745.0], [8.4, 1745.0], [8.5, 1745.0], [8.6, 1745.0], [8.7, 1745.0], [8.8, 1745.0], [8.9, 1753.0], [9.0, 1753.0], [9.1, 1753.0], [9.2, 1753.0], [9.3, 1753.0], [9.4, 1753.0], [9.5, 1801.0], [9.6, 1801.0], [9.7, 1801.0], [9.8, 1801.0], [9.9, 1801.0], [10.0, 1828.0], [10.1, 1828.0], [10.2, 1828.0], [10.3, 1828.0], [10.4, 1828.0], [10.5, 1828.0], [10.6, 1830.0], [10.7, 1830.0], [10.8, 1830.0], [10.9, 1830.0], [11.0, 1830.0], [11.1, 1830.0], [11.2, 1855.0], [11.3, 1855.0], [11.4, 1855.0], [11.5, 1855.0], [11.6, 1855.0], [11.7, 1855.0], [11.8, 1859.0], [11.9, 1859.0], [12.0, 1859.0], [12.1, 1859.0], [12.2, 1859.0], [12.3, 1859.0], [12.4, 1885.0], [12.5, 1885.0], [12.6, 1885.0], [12.7, 1885.0], [12.8, 1885.0], [12.9, 1885.0], [13.0, 1902.0], [13.1, 1902.0], [13.2, 1902.0], [13.3, 1902.0], [13.4, 1902.0], [13.5, 1902.0], [13.6, 1988.0], [13.7, 1988.0], [13.8, 1988.0], [13.9, 1988.0], [14.0, 1988.0], [14.1, 1988.0], [14.2, 1990.0], [14.3, 1990.0], [14.4, 1990.0], [14.5, 1990.0], [14.6, 1990.0], [14.7, 1990.0], [14.8, 2072.0], [14.9, 2072.0], [15.0, 2072.0], [15.1, 2072.0], [15.2, 2072.0], [15.3, 2186.0], [15.4, 2186.0], [15.5, 2186.0], [15.6, 2186.0], [15.7, 2186.0], [15.8, 2186.0], [15.9, 2187.0], [16.0, 2187.0], [16.1, 2187.0], [16.2, 2187.0], [16.3, 2187.0], [16.4, 2187.0], [16.5, 2244.0], [16.6, 2244.0], [16.7, 2244.0], [16.8, 2244.0], [16.9, 2244.0], [17.0, 2244.0], [17.1, 2264.0], [17.2, 2264.0], [17.3, 2264.0], [17.4, 2264.0], [17.5, 2264.0], [17.6, 2264.0], [17.7, 2322.0], [17.8, 2322.0], [17.9, 2322.0], [18.0, 2322.0], [18.1, 2322.0], [18.2, 2322.0], [18.3, 2350.0], [18.4, 2350.0], [18.5, 2350.0], [18.6, 2350.0], [18.7, 2350.0], [18.8, 2350.0], [18.9, 2382.0], [19.0, 2382.0], [19.1, 2382.0], [19.2, 2382.0], [19.3, 2382.0], [19.4, 2382.0], [19.5, 2441.0], [19.6, 2441.0], [19.7, 2441.0], [19.8, 2441.0], [19.9, 2441.0], [20.0, 2441.0], [20.1, 2562.0], [20.2, 2562.0], [20.3, 2562.0], [20.4, 2562.0], [20.5, 2562.0], [20.6, 2588.0], [20.7, 2588.0], [20.8, 2588.0], [20.9, 2588.0], [21.0, 2588.0], [21.1, 2588.0], [21.2, 2683.0], [21.3, 2683.0], [21.4, 2683.0], [21.5, 2683.0], [21.6, 2683.0], [21.7, 2683.0], [21.8, 2690.0], [21.9, 2690.0], [22.0, 2690.0], [22.1, 2690.0], [22.2, 2690.0], [22.3, 2690.0], [22.4, 2736.0], [22.5, 2736.0], [22.6, 2736.0], [22.7, 2736.0], [22.8, 2736.0], [22.9, 2736.0], [23.0, 2760.0], [23.1, 2760.0], [23.2, 2760.0], [23.3, 2760.0], [23.4, 2760.0], [23.5, 2760.0], [23.6, 2860.0], [23.7, 2860.0], [23.8, 2860.0], [23.9, 2860.0], [24.0, 2860.0], [24.1, 2860.0], [24.2, 2862.0], [24.3, 2862.0], [24.4, 2862.0], [24.5, 2862.0], [24.6, 2862.0], [24.7, 2862.0], [24.8, 2886.0], [24.9, 2886.0], [25.0, 2886.0], [25.1, 2886.0], [25.2, 2886.0], [25.3, 2887.0], [25.4, 2887.0], [25.5, 2887.0], [25.6, 2887.0], [25.7, 2887.0], [25.8, 2887.0], [25.9, 2939.0], [26.0, 2939.0], [26.1, 2939.0], [26.2, 2939.0], [26.3, 2939.0], [26.4, 2939.0], [26.5, 2959.0], [26.6, 2959.0], [26.7, 2959.0], [26.8, 2959.0], [26.9, 2959.0], [27.0, 2959.0], [27.1, 2972.0], [27.2, 2972.0], [27.3, 2972.0], [27.4, 2972.0], [27.5, 2972.0], [27.6, 2972.0], [27.7, 3060.0], [27.8, 3060.0], [27.9, 3060.0], [28.0, 3060.0], [28.1, 3060.0], [28.2, 3060.0], [28.3, 3088.0], [28.4, 3088.0], [28.5, 3088.0], [28.6, 3088.0], [28.7, 3088.0], [28.8, 3088.0], [28.9, 3091.0], [29.0, 3091.0], [29.1, 3091.0], [29.2, 3091.0], [29.3, 3091.0], [29.4, 3091.0], [29.5, 3091.0], [29.6, 3091.0], [29.7, 3091.0], [29.8, 3091.0], [29.9, 3091.0], [30.0, 3091.0], [30.1, 3109.0], [30.2, 3109.0], [30.3, 3109.0], [30.4, 3109.0], [30.5, 3109.0], [30.6, 3115.0], [30.7, 3115.0], [30.8, 3115.0], [30.9, 3115.0], [31.0, 3115.0], [31.1, 3115.0], [31.2, 3183.0], [31.3, 3183.0], [31.4, 3183.0], [31.5, 3183.0], [31.6, 3183.0], [31.7, 3183.0], [31.8, 3188.0], [31.9, 3188.0], [32.0, 3188.0], [32.1, 3188.0], [32.2, 3188.0], [32.3, 3188.0], [32.4, 3195.0], [32.5, 3195.0], [32.6, 3195.0], [32.7, 3195.0], [32.8, 3195.0], [32.9, 3195.0], [33.0, 3207.0], [33.1, 3207.0], [33.2, 3207.0], [33.3, 3207.0], [33.4, 3207.0], [33.5, 3207.0], [33.6, 3223.0], [33.7, 3223.0], [33.8, 3223.0], [33.9, 3223.0], [34.0, 3223.0], [34.1, 3223.0], [34.2, 3251.0], [34.3, 3251.0], [34.4, 3251.0], [34.5, 3251.0], [34.6, 3251.0], [34.7, 3251.0], [34.8, 3277.0], [34.9, 3277.0], [35.0, 3277.0], [35.1, 3277.0], [35.2, 3277.0], [35.3, 3279.0], [35.4, 3279.0], [35.5, 3279.0], [35.6, 3279.0], [35.7, 3279.0], [35.8, 3279.0], [35.9, 3326.0], [36.0, 3326.0], [36.1, 3326.0], [36.2, 3326.0], [36.3, 3326.0], [36.4, 3326.0], [36.5, 3334.0], [36.6, 3334.0], [36.7, 3334.0], [36.8, 3334.0], [36.9, 3334.0], [37.0, 3334.0], [37.1, 3343.0], [37.2, 3343.0], [37.3, 3343.0], [37.4, 3343.0], [37.5, 3343.0], [37.6, 3343.0], [37.7, 3353.0], [37.8, 3353.0], [37.9, 3353.0], [38.0, 3353.0], [38.1, 3353.0], [38.2, 3353.0], [38.3, 3374.0], [38.4, 3374.0], [38.5, 3374.0], [38.6, 3374.0], [38.7, 3374.0], [38.8, 3374.0], [38.9, 3378.0], [39.0, 3378.0], [39.1, 3378.0], [39.2, 3378.0], [39.3, 3378.0], [39.4, 3378.0], [39.5, 3460.0], [39.6, 3460.0], [39.7, 3460.0], [39.8, 3460.0], [39.9, 3460.0], [40.0, 3478.0], [40.1, 3478.0], [40.2, 3478.0], [40.3, 3478.0], [40.4, 3478.0], [40.5, 3478.0], [40.6, 3568.0], [40.7, 3568.0], [40.8, 3568.0], [40.9, 3568.0], [41.0, 3568.0], [41.1, 3568.0], [41.2, 3587.0], [41.3, 3587.0], [41.4, 3587.0], [41.5, 3587.0], [41.6, 3587.0], [41.7, 3587.0], [41.8, 3592.0], [41.9, 3592.0], [42.0, 3592.0], [42.1, 3592.0], [42.2, 3592.0], [42.3, 3592.0], [42.4, 3596.0], [42.5, 3596.0], [42.6, 3596.0], [42.7, 3596.0], [42.8, 3596.0], [42.9, 3596.0], [43.0, 3659.0], [43.1, 3659.0], [43.2, 3659.0], [43.3, 3659.0], [43.4, 3659.0], [43.5, 3659.0], [43.6, 3690.0], [43.7, 3690.0], [43.8, 3690.0], [43.9, 3690.0], [44.0, 3690.0], [44.1, 3690.0], [44.2, 3703.0], [44.3, 3703.0], [44.4, 3703.0], [44.5, 3703.0], [44.6, 3703.0], [44.7, 3703.0], [44.8, 3712.0], [44.9, 3712.0], [45.0, 3712.0], [45.1, 3712.0], [45.2, 3712.0], [45.3, 3773.0], [45.4, 3773.0], [45.5, 3773.0], [45.6, 3773.0], [45.7, 3773.0], [45.8, 3773.0], [45.9, 3790.0], [46.0, 3790.0], [46.1, 3790.0], [46.2, 3790.0], [46.3, 3790.0], [46.4, 3790.0], [46.5, 3865.0], [46.6, 3865.0], [46.7, 3865.0], [46.8, 3865.0], [46.9, 3865.0], [47.0, 3865.0], [47.1, 3872.0], [47.2, 3872.0], [47.3, 3872.0], [47.4, 3872.0], [47.5, 3872.0], [47.6, 3872.0], [47.7, 3875.0], [47.8, 3875.0], [47.9, 3875.0], [48.0, 3875.0], [48.1, 3875.0], [48.2, 3875.0], [48.3, 3880.0], [48.4, 3880.0], [48.5, 3880.0], [48.6, 3880.0], [48.7, 3880.0], [48.8, 3880.0], [48.9, 3899.0], [49.0, 3899.0], [49.1, 3899.0], [49.2, 3899.0], [49.3, 3899.0], [49.4, 3899.0], [49.5, 3918.0], [49.6, 3918.0], [49.7, 3918.0], [49.8, 3918.0], [49.9, 3918.0], [50.0, 3941.0], [50.1, 3941.0], [50.2, 3941.0], [50.3, 3941.0], [50.4, 3941.0], [50.5, 3941.0], [50.6, 3950.0], [50.7, 3950.0], [50.8, 3950.0], [50.9, 3950.0], [51.0, 3950.0], [51.1, 3950.0], [51.2, 4016.0], [51.3, 4016.0], [51.4, 4016.0], [51.5, 4016.0], [51.6, 4016.0], [51.7, 4016.0], [51.8, 4031.0], [51.9, 4031.0], [52.0, 4031.0], [52.1, 4031.0], [52.2, 4031.0], [52.3, 4031.0], [52.4, 4059.0], [52.5, 4059.0], [52.6, 4059.0], [52.7, 4059.0], [52.8, 4059.0], [52.9, 4059.0], [53.0, 4167.0], [53.1, 4167.0], [53.2, 4167.0], [53.3, 4167.0], [53.4, 4167.0], [53.5, 4167.0], [53.6, 4173.0], [53.7, 4173.0], [53.8, 4173.0], [53.9, 4173.0], [54.0, 4173.0], [54.1, 4173.0], [54.2, 4176.0], [54.3, 4176.0], [54.4, 4176.0], [54.5, 4176.0], [54.6, 4176.0], [54.7, 4176.0], [54.8, 4218.0], [54.9, 4218.0], [55.0, 4218.0], [55.1, 4218.0], [55.2, 4218.0], [55.3, 4223.0], [55.4, 4223.0], [55.5, 4223.0], [55.6, 4223.0], [55.7, 4223.0], [55.8, 4223.0], [55.9, 4225.0], [56.0, 4225.0], [56.1, 4225.0], [56.2, 4225.0], [56.3, 4225.0], [56.4, 4225.0], [56.5, 4229.0], [56.6, 4229.0], [56.7, 4229.0], [56.8, 4229.0], [56.9, 4229.0], [57.0, 4229.0], [57.1, 4232.0], [57.2, 4232.0], [57.3, 4232.0], [57.4, 4232.0], [57.5, 4232.0], [57.6, 4232.0], [57.7, 4235.0], [57.8, 4235.0], [57.9, 4235.0], [58.0, 4235.0], [58.1, 4235.0], [58.2, 4235.0], [58.3, 4250.0], [58.4, 4250.0], [58.5, 4250.0], [58.6, 4250.0], [58.7, 4250.0], [58.8, 4250.0], [58.9, 4256.0], [59.0, 4256.0], [59.1, 4256.0], [59.2, 4256.0], [59.3, 4256.0], [59.4, 4256.0], [59.5, 4275.0], [59.6, 4275.0], [59.7, 4275.0], [59.8, 4275.0], [59.9, 4275.0], [60.0, 4286.0], [60.1, 4286.0], [60.2, 4286.0], [60.3, 4286.0], [60.4, 4286.0], [60.5, 4286.0], [60.6, 4296.0], [60.7, 4296.0], [60.8, 4296.0], [60.9, 4296.0], [61.0, 4296.0], [61.1, 4296.0], [61.2, 4304.0], [61.3, 4304.0], [61.4, 4304.0], [61.5, 4304.0], [61.6, 4304.0], [61.7, 4304.0], [61.8, 4305.0], [61.9, 4305.0], [62.0, 4305.0], [62.1, 4305.0], [62.2, 4305.0], [62.3, 4305.0], [62.4, 4324.0], [62.5, 4324.0], [62.6, 4324.0], [62.7, 4324.0], [62.8, 4324.0], [62.9, 4324.0], [63.0, 4331.0], [63.1, 4331.0], [63.2, 4331.0], [63.3, 4331.0], [63.4, 4331.0], [63.5, 4331.0], [63.6, 4345.0], [63.7, 4345.0], [63.8, 4345.0], [63.9, 4345.0], [64.0, 4345.0], [64.1, 4345.0], [64.2, 4352.0], [64.3, 4352.0], [64.4, 4352.0], [64.5, 4352.0], [64.6, 4352.0], [64.7, 4352.0], [64.8, 4404.0], [64.9, 4404.0], [65.0, 4404.0], [65.1, 4404.0], [65.2, 4404.0], [65.3, 4439.0], [65.4, 4439.0], [65.5, 4439.0], [65.6, 4439.0], [65.7, 4439.0], [65.8, 4439.0], [65.9, 4485.0], [66.0, 4485.0], [66.1, 4485.0], [66.2, 4485.0], [66.3, 4485.0], [66.4, 4485.0], [66.5, 4585.0], [66.6, 4585.0], [66.7, 4585.0], [66.8, 4585.0], [66.9, 4585.0], [67.0, 4585.0], [67.1, 4648.0], [67.2, 4648.0], [67.3, 4648.0], [67.4, 4648.0], [67.5, 4648.0], [67.6, 4648.0], [67.7, 4702.0], [67.8, 4702.0], [67.9, 4702.0], [68.0, 4702.0], [68.1, 4702.0], [68.2, 4702.0], [68.3, 4702.0], [68.4, 4702.0], [68.5, 4702.0], [68.6, 4702.0], [68.7, 4702.0], [68.8, 4702.0], [68.9, 4733.0], [69.0, 4733.0], [69.1, 4733.0], [69.2, 4733.0], [69.3, 4733.0], [69.4, 4733.0], [69.5, 4771.0], [69.6, 4771.0], [69.7, 4771.0], [69.8, 4771.0], [69.9, 4771.0], [70.0, 4876.0], [70.1, 4876.0], [70.2, 4876.0], [70.3, 4876.0], [70.4, 4876.0], [70.5, 4876.0], [70.6, 4961.0], [70.7, 4961.0], [70.8, 4961.0], [70.9, 4961.0], [71.0, 4961.0], [71.1, 4961.0], [71.2, 4978.0], [71.3, 4978.0], [71.4, 4978.0], [71.5, 4978.0], [71.6, 4978.0], [71.7, 4978.0], [71.8, 4985.0], [71.9, 4985.0], [72.0, 4985.0], [72.1, 4985.0], [72.2, 4985.0], [72.3, 4985.0], [72.4, 5007.0], [72.5, 5007.0], [72.6, 5007.0], [72.7, 5007.0], [72.8, 5007.0], [72.9, 5007.0], [73.0, 5028.0], [73.1, 5028.0], [73.2, 5028.0], [73.3, 5028.0], [73.4, 5028.0], [73.5, 5028.0], [73.6, 5150.0], [73.7, 5150.0], [73.8, 5150.0], [73.9, 5150.0], [74.0, 5150.0], [74.1, 5150.0], [74.2, 5152.0], [74.3, 5152.0], [74.4, 5152.0], [74.5, 5152.0], [74.6, 5152.0], [74.7, 5152.0], [74.8, 5156.0], [74.9, 5156.0], [75.0, 5156.0], [75.1, 5156.0], [75.2, 5156.0], [75.3, 5173.0], [75.4, 5173.0], [75.5, 5173.0], [75.6, 5173.0], [75.7, 5173.0], [75.8, 5173.0], [75.9, 5272.0], [76.0, 5272.0], [76.1, 5272.0], [76.2, 5272.0], [76.3, 5272.0], [76.4, 5272.0], [76.5, 5297.0], [76.6, 5297.0], [76.7, 5297.0], [76.8, 5297.0], [76.9, 5297.0], [77.0, 5297.0], [77.1, 5326.0], [77.2, 5326.0], [77.3, 5326.0], [77.4, 5326.0], [77.5, 5326.0], [77.6, 5326.0], [77.7, 5352.0], [77.8, 5352.0], [77.9, 5352.0], [78.0, 5352.0], [78.1, 5352.0], [78.2, 5352.0], [78.3, 5414.0], [78.4, 5414.0], [78.5, 5414.0], [78.6, 5414.0], [78.7, 5414.0], [78.8, 5414.0], [78.9, 5423.0], [79.0, 5423.0], [79.1, 5423.0], [79.2, 5423.0], [79.3, 5423.0], [79.4, 5423.0], [79.5, 5545.0], [79.6, 5545.0], [79.7, 5545.0], [79.8, 5545.0], [79.9, 5545.0], [80.0, 5545.0], [80.1, 5653.0], [80.2, 5653.0], [80.3, 5653.0], [80.4, 5653.0], [80.5, 5653.0], [80.6, 5661.0], [80.7, 5661.0], [80.8, 5661.0], [80.9, 5661.0], [81.0, 5661.0], [81.1, 5661.0], [81.2, 5736.0], [81.3, 5736.0], [81.4, 5736.0], [81.5, 5736.0], [81.6, 5736.0], [81.7, 5736.0], [81.8, 5749.0], [81.9, 5749.0], [82.0, 5749.0], [82.1, 5749.0], [82.2, 5749.0], [82.3, 5749.0], [82.4, 5829.0], [82.5, 5829.0], [82.6, 5829.0], [82.7, 5829.0], [82.8, 5829.0], [82.9, 5829.0], [83.0, 5890.0], [83.1, 5890.0], [83.2, 5890.0], [83.3, 5890.0], [83.4, 5890.0], [83.5, 5890.0], [83.6, 5951.0], [83.7, 5951.0], [83.8, 5951.0], [83.9, 5951.0], [84.0, 5951.0], [84.1, 5951.0], [84.2, 5984.0], [84.3, 5984.0], [84.4, 5984.0], [84.5, 5984.0], [84.6, 5984.0], [84.7, 5984.0], [84.8, 6001.0], [84.9, 6001.0], [85.0, 6001.0], [85.1, 6001.0], [85.2, 6001.0], [85.3, 6003.0], [85.4, 6003.0], [85.5, 6003.0], [85.6, 6003.0], [85.7, 6003.0], [85.8, 6003.0], [85.9, 6174.0], [86.0, 6174.0], [86.1, 6174.0], [86.2, 6174.0], [86.3, 6174.0], [86.4, 6174.0], [86.5, 6226.0], [86.6, 6226.0], [86.7, 6226.0], [86.8, 6226.0], [86.9, 6226.0], [87.0, 6226.0], [87.1, 6241.0], [87.2, 6241.0], [87.3, 6241.0], [87.4, 6241.0], [87.5, 6241.0], [87.6, 6241.0], [87.7, 6316.0], [87.8, 6316.0], [87.9, 6316.0], [88.0, 6316.0], [88.1, 6316.0], [88.2, 6316.0], [88.3, 6328.0], [88.4, 6328.0], [88.5, 6328.0], [88.6, 6328.0], [88.7, 6328.0], [88.8, 6328.0], [88.9, 6469.0], [89.0, 6469.0], [89.1, 6469.0], [89.2, 6469.0], [89.3, 6469.0], [89.4, 6469.0], [89.5, 6496.0], [89.6, 6496.0], [89.7, 6496.0], [89.8, 6496.0], [89.9, 6496.0], [90.0, 6496.0], [90.1, 6516.0], [90.2, 6516.0], [90.3, 6516.0], [90.4, 6516.0], [90.5, 6516.0], [90.6, 6517.0], [90.7, 6517.0], [90.8, 6517.0], [90.9, 6517.0], [91.0, 6517.0], [91.1, 6517.0], [91.2, 6520.0], [91.3, 6520.0], [91.4, 6520.0], [91.5, 6520.0], [91.6, 6520.0], [91.7, 6520.0], [91.8, 6557.0], [91.9, 6557.0], [92.0, 6557.0], [92.1, 6557.0], [92.2, 6557.0], [92.3, 6557.0], [92.4, 6588.0], [92.5, 6588.0], [92.6, 6588.0], [92.7, 6588.0], [92.8, 6588.0], [92.9, 6588.0], [93.0, 6619.0], [93.1, 6619.0], [93.2, 6619.0], [93.3, 6619.0], [93.4, 6619.0], [93.5, 6619.0], [93.6, 6749.0], [93.7, 6749.0], [93.8, 6749.0], [93.9, 6749.0], [94.0, 6749.0], [94.1, 6749.0], [94.2, 6804.0], [94.3, 6804.0], [94.4, 6804.0], [94.5, 6804.0], [94.6, 6804.0], [94.7, 6804.0], [94.8, 13624.0], [94.9, 13624.0], [95.0, 13624.0], [95.1, 13624.0], [95.2, 13624.0], [95.3, 14428.0], [95.4, 14428.0], [95.5, 14428.0], [95.6, 14428.0], [95.7, 14428.0], [95.8, 14428.0], [95.9, 14818.0], [96.0, 14818.0], [96.1, 14818.0], [96.2, 14818.0], [96.3, 14818.0], [96.4, 14818.0], [96.5, 14824.0], [96.6, 14824.0], [96.7, 14824.0], [96.8, 14824.0], [96.9, 14824.0], [97.0, 14824.0], [97.1, 15353.0], [97.2, 15353.0], [97.3, 15353.0], [97.4, 15353.0], [97.5, 15353.0], [97.6, 15353.0], [97.7, 15420.0], [97.8, 15420.0], [97.9, 15420.0], [98.0, 15420.0], [98.1, 15420.0], [98.2, 15420.0], [98.3, 16772.0], [98.4, 16772.0], [98.5, 16772.0], [98.6, 16772.0], [98.7, 16772.0], [98.8, 16772.0], [98.9, 16871.0], [99.0, 16871.0], [99.1, 16871.0], [99.2, 16871.0], [99.3, 16871.0], [99.4, 16871.0], [99.5, 16922.0], [99.6, 16922.0], [99.7, 16922.0], [99.8, 16922.0], [99.9, 16922.0], [100.0, 16922.0]], "isOverall": false, "label": "Home-0", "isController": false}, {"data": [[0.0, 28.0], [0.1, 28.0], [0.2, 28.0], [0.3, 28.0], [0.4, 28.0], [0.5, 28.0], [0.6, 29.0], [0.7, 29.0], [0.8, 29.0], [0.9, 29.0], [1.0, 29.0], [1.1, 29.0], [1.2, 30.0], [1.3, 30.0], [1.4, 30.0], [1.5, 30.0], [1.6, 30.0], [1.7, 30.0], [1.8, 30.0], [1.9, 30.0], [2.0, 30.0], [2.1, 30.0], [2.2, 30.0], [2.3, 30.0], [2.4, 30.0], [2.5, 30.0], [2.6, 30.0], [2.7, 30.0], [2.8, 30.0], [2.9, 30.0], [3.0, 31.0], [3.1, 31.0], [3.2, 31.0], [3.3, 31.0], [3.4, 31.0], [3.5, 31.0], [3.6, 31.0], [3.7, 31.0], [3.8, 31.0], [3.9, 31.0], [4.0, 31.0], [4.1, 31.0], [4.2, 32.0], [4.3, 32.0], [4.4, 32.0], [4.5, 32.0], [4.6, 32.0], [4.7, 32.0], [4.8, 32.0], [4.9, 32.0], [5.0, 32.0], [5.1, 32.0], [5.2, 32.0], [5.3, 34.0], [5.4, 34.0], [5.5, 34.0], [5.6, 34.0], [5.7, 34.0], [5.8, 34.0], [5.9, 34.0], [6.0, 34.0], [6.1, 34.0], [6.2, 34.0], [6.3, 34.0], [6.4, 34.0], [6.5, 34.0], [6.6, 34.0], [6.7, 34.0], [6.8, 34.0], [6.9, 34.0], [7.0, 34.0], [7.1, 34.0], [7.2, 34.0], [7.3, 34.0], [7.4, 34.0], [7.5, 34.0], [7.6, 34.0], [7.7, 34.0], [7.8, 34.0], [7.9, 34.0], [8.0, 34.0], [8.1, 34.0], [8.2, 34.0], [8.3, 36.0], [8.4, 36.0], [8.5, 36.0], [8.6, 36.0], [8.7, 36.0], [8.8, 36.0], [8.9, 37.0], [9.0, 37.0], [9.1, 37.0], [9.2, 37.0], [9.3, 37.0], [9.4, 37.0], [9.5, 37.0], [9.6, 37.0], [9.7, 37.0], [9.8, 37.0], [9.9, 37.0], [10.0, 37.0], [10.1, 37.0], [10.2, 37.0], [10.3, 37.0], [10.4, 37.0], [10.5, 37.0], [10.6, 37.0], [10.7, 37.0], [10.8, 37.0], [10.9, 37.0], [11.0, 37.0], [11.1, 37.0], [11.2, 38.0], [11.3, 38.0], [11.4, 38.0], [11.5, 38.0], [11.6, 38.0], [11.7, 38.0], [11.8, 43.0], [11.9, 43.0], [12.0, 43.0], [12.1, 43.0], [12.2, 43.0], [12.3, 43.0], [12.4, 43.0], [12.5, 43.0], [12.6, 43.0], [12.7, 43.0], [12.8, 43.0], [12.9, 43.0], [13.0, 44.0], [13.1, 44.0], [13.2, 44.0], [13.3, 44.0], [13.4, 44.0], [13.5, 44.0], [13.6, 44.0], [13.7, 44.0], [13.8, 44.0], [13.9, 44.0], [14.0, 44.0], [14.1, 44.0], [14.2, 47.0], [14.3, 47.0], [14.4, 47.0], [14.5, 47.0], [14.6, 47.0], [14.7, 47.0], [14.8, 48.0], [14.9, 48.0], [15.0, 48.0], [15.1, 48.0], [15.2, 48.0], [15.3, 55.0], [15.4, 55.0], [15.5, 55.0], [15.6, 55.0], [15.7, 55.0], [15.8, 55.0], [15.9, 56.0], [16.0, 56.0], [16.1, 56.0], [16.2, 56.0], [16.3, 56.0], [16.4, 56.0], [16.5, 57.0], [16.6, 57.0], [16.7, 57.0], [16.8, 57.0], [16.9, 57.0], [17.0, 57.0], [17.1, 59.0], [17.2, 59.0], [17.3, 59.0], [17.4, 59.0], [17.5, 59.0], [17.6, 59.0], [17.7, 59.0], [17.8, 59.0], [17.9, 59.0], [18.0, 59.0], [18.1, 59.0], [18.2, 59.0], [18.3, 76.0], [18.4, 76.0], [18.5, 76.0], [18.6, 76.0], [18.7, 76.0], [18.8, 76.0], [18.9, 77.0], [19.0, 77.0], [19.1, 77.0], [19.2, 77.0], [19.3, 77.0], [19.4, 77.0], [19.5, 79.0], [19.6, 79.0], [19.7, 79.0], [19.8, 79.0], [19.9, 79.0], [20.0, 79.0], [20.1, 82.0], [20.2, 82.0], [20.3, 82.0], [20.4, 82.0], [20.5, 82.0], [20.6, 83.0], [20.7, 83.0], [20.8, 83.0], [20.9, 83.0], [21.0, 83.0], [21.1, 83.0], [21.2, 88.0], [21.3, 88.0], [21.4, 88.0], [21.5, 88.0], [21.6, 88.0], [21.7, 88.0], [21.8, 89.0], [21.9, 89.0], [22.0, 89.0], [22.1, 89.0], [22.2, 89.0], [22.3, 89.0], [22.4, 153.0], [22.5, 153.0], [22.6, 153.0], [22.7, 153.0], [22.8, 153.0], [22.9, 153.0], [23.0, 154.0], [23.1, 154.0], [23.2, 154.0], [23.3, 154.0], [23.4, 154.0], [23.5, 154.0], [23.6, 242.0], [23.7, 242.0], [23.8, 242.0], [23.9, 242.0], [24.0, 242.0], [24.1, 242.0], [24.2, 250.0], [24.3, 250.0], [24.4, 250.0], [24.5, 250.0], [24.6, 250.0], [24.7, 250.0], [24.8, 254.0], [24.9, 254.0], [25.0, 254.0], [25.1, 254.0], [25.2, 254.0], [25.3, 256.0], [25.4, 256.0], [25.5, 256.0], [25.6, 256.0], [25.7, 256.0], [25.8, 256.0], [25.9, 265.0], [26.0, 265.0], [26.1, 265.0], [26.2, 265.0], [26.3, 265.0], [26.4, 265.0], [26.5, 266.0], [26.6, 266.0], [26.7, 266.0], [26.8, 266.0], [26.9, 266.0], [27.0, 266.0], [27.1, 306.0], [27.2, 306.0], [27.3, 306.0], [27.4, 306.0], [27.5, 306.0], [27.6, 306.0], [27.7, 325.0], [27.8, 325.0], [27.9, 325.0], [28.0, 325.0], [28.1, 325.0], [28.2, 325.0], [28.3, 331.0], [28.4, 331.0], [28.5, 331.0], [28.6, 331.0], [28.7, 331.0], [28.8, 331.0], [28.9, 335.0], [29.0, 335.0], [29.1, 335.0], [29.2, 335.0], [29.3, 335.0], [29.4, 335.0], [29.5, 345.0], [29.6, 345.0], [29.7, 345.0], [29.8, 345.0], [29.9, 345.0], [30.0, 345.0], [30.1, 346.0], [30.2, 346.0], [30.3, 346.0], [30.4, 346.0], [30.5, 346.0], [30.6, 349.0], [30.7, 349.0], [30.8, 349.0], [30.9, 349.0], [31.0, 349.0], [31.1, 349.0], [31.2, 372.0], [31.3, 372.0], [31.4, 372.0], [31.5, 372.0], [31.6, 372.0], [31.7, 372.0], [31.8, 372.0], [31.9, 372.0], [32.0, 372.0], [32.1, 372.0], [32.2, 372.0], [32.3, 372.0], [32.4, 434.0], [32.5, 434.0], [32.6, 434.0], [32.7, 434.0], [32.8, 434.0], [32.9, 434.0], [33.0, 466.0], [33.1, 466.0], [33.2, 466.0], [33.3, 466.0], [33.4, 466.0], [33.5, 466.0], [33.6, 473.0], [33.7, 473.0], [33.8, 473.0], [33.9, 473.0], [34.0, 473.0], [34.1, 473.0], [34.2, 520.0], [34.3, 520.0], [34.4, 520.0], [34.5, 520.0], [34.6, 520.0], [34.7, 520.0], [34.8, 915.0], [34.9, 915.0], [35.0, 915.0], [35.1, 915.0], [35.2, 915.0], [35.3, 1073.0], [35.4, 1073.0], [35.5, 1073.0], [35.6, 1073.0], [35.7, 1073.0], [35.8, 1073.0], [35.9, 1261.0], [36.0, 1261.0], [36.1, 1261.0], [36.2, 1261.0], [36.3, 1261.0], [36.4, 1261.0], [36.5, 1562.0], [36.6, 1562.0], [36.7, 1562.0], [36.8, 1562.0], [36.9, 1562.0], [37.0, 1562.0], [37.1, 2389.0], [37.2, 2389.0], [37.3, 2389.0], [37.4, 2389.0], [37.5, 2389.0], [37.6, 2389.0], [37.7, 2536.0], [37.8, 2536.0], [37.9, 2536.0], [38.0, 2536.0], [38.1, 2536.0], [38.2, 2536.0], [38.3, 2542.0], [38.4, 2542.0], [38.5, 2542.0], [38.6, 2542.0], [38.7, 2542.0], [38.8, 2542.0], [38.9, 2624.0], [39.0, 2624.0], [39.1, 2624.0], [39.2, 2624.0], [39.3, 2624.0], [39.4, 2624.0], [39.5, 2635.0], [39.6, 2635.0], [39.7, 2635.0], [39.8, 2635.0], [39.9, 2635.0], [40.0, 2635.0], [40.1, 2645.0], [40.2, 2645.0], [40.3, 2645.0], [40.4, 2645.0], [40.5, 2645.0], [40.6, 2651.0], [40.7, 2651.0], [40.8, 2651.0], [40.9, 2651.0], [41.0, 2651.0], [41.1, 2651.0], [41.2, 2706.0], [41.3, 2706.0], [41.4, 2706.0], [41.5, 2706.0], [41.6, 2706.0], [41.7, 2706.0], [41.8, 2748.0], [41.9, 2748.0], [42.0, 2748.0], [42.1, 2748.0], [42.2, 2748.0], [42.3, 2748.0], [42.4, 2885.0], [42.5, 2885.0], [42.6, 2885.0], [42.7, 2885.0], [42.8, 2885.0], [42.9, 2885.0], [43.0, 3054.0], [43.1, 3054.0], [43.2, 3054.0], [43.3, 3054.0], [43.4, 3054.0], [43.5, 3054.0], [43.6, 3062.0], [43.7, 3062.0], [43.8, 3062.0], [43.9, 3062.0], [44.0, 3062.0], [44.1, 3062.0], [44.2, 3116.0], [44.3, 3116.0], [44.4, 3116.0], [44.5, 3116.0], [44.6, 3116.0], [44.7, 3116.0], [44.8, 3198.0], [44.9, 3198.0], [45.0, 3198.0], [45.1, 3198.0], [45.2, 3198.0], [45.3, 3260.0], [45.4, 3260.0], [45.5, 3260.0], [45.6, 3260.0], [45.7, 3260.0], [45.8, 3260.0], [45.9, 3316.0], [46.0, 3316.0], [46.1, 3316.0], [46.2, 3316.0], [46.3, 3316.0], [46.4, 3316.0], [46.5, 3373.0], [46.6, 3373.0], [46.7, 3373.0], [46.8, 3373.0], [46.9, 3373.0], [47.0, 3373.0], [47.1, 3501.0], [47.2, 3501.0], [47.3, 3501.0], [47.4, 3501.0], [47.5, 3501.0], [47.6, 3501.0], [47.7, 3559.0], [47.8, 3559.0], [47.9, 3559.0], [48.0, 3559.0], [48.1, 3559.0], [48.2, 3559.0], [48.3, 3574.0], [48.4, 3574.0], [48.5, 3574.0], [48.6, 3574.0], [48.7, 3574.0], [48.8, 3574.0], [48.9, 3716.0], [49.0, 3716.0], [49.1, 3716.0], [49.2, 3716.0], [49.3, 3716.0], [49.4, 3716.0], [49.5, 3740.0], [49.6, 3740.0], [49.7, 3740.0], [49.8, 3740.0], [49.9, 3740.0], [50.0, 3841.0], [50.1, 3841.0], [50.2, 3841.0], [50.3, 3841.0], [50.4, 3841.0], [50.5, 3841.0], [50.6, 3862.0], [50.7, 3862.0], [50.8, 3862.0], [50.9, 3862.0], [51.0, 3862.0], [51.1, 3862.0], [51.2, 3894.0], [51.3, 3894.0], [51.4, 3894.0], [51.5, 3894.0], [51.6, 3894.0], [51.7, 3894.0], [51.8, 3922.0], [51.9, 3922.0], [52.0, 3922.0], [52.1, 3922.0], [52.2, 3922.0], [52.3, 3922.0], [52.4, 3977.0], [52.5, 3977.0], [52.6, 3977.0], [52.7, 3977.0], [52.8, 3977.0], [52.9, 3977.0], [53.0, 3981.0], [53.1, 3981.0], [53.2, 3981.0], [53.3, 3981.0], [53.4, 3981.0], [53.5, 3981.0], [53.6, 4013.0], [53.7, 4013.0], [53.8, 4013.0], [53.9, 4013.0], [54.0, 4013.0], [54.1, 4013.0], [54.2, 4015.0], [54.3, 4015.0], [54.4, 4015.0], [54.5, 4015.0], [54.6, 4015.0], [54.7, 4015.0], [54.8, 4029.0], [54.9, 4029.0], [55.0, 4029.0], [55.1, 4029.0], [55.2, 4029.0], [55.3, 4042.0], [55.4, 4042.0], [55.5, 4042.0], [55.6, 4042.0], [55.7, 4042.0], [55.8, 4042.0], [55.9, 4046.0], [56.0, 4046.0], [56.1, 4046.0], [56.2, 4046.0], [56.3, 4046.0], [56.4, 4046.0], [56.5, 4064.0], [56.6, 4064.0], [56.7, 4064.0], [56.8, 4064.0], [56.9, 4064.0], [57.0, 4064.0], [57.1, 4071.0], [57.2, 4071.0], [57.3, 4071.0], [57.4, 4071.0], [57.5, 4071.0], [57.6, 4071.0], [57.7, 4084.0], [57.8, 4084.0], [57.9, 4084.0], [58.0, 4084.0], [58.1, 4084.0], [58.2, 4084.0], [58.3, 4084.0], [58.4, 4084.0], [58.5, 4084.0], [58.6, 4084.0], [58.7, 4084.0], [58.8, 4084.0], [58.9, 4107.0], [59.0, 4107.0], [59.1, 4107.0], [59.2, 4107.0], [59.3, 4107.0], [59.4, 4107.0], [59.5, 4119.0], [59.6, 4119.0], [59.7, 4119.0], [59.8, 4119.0], [59.9, 4119.0], [60.0, 4134.0], [60.1, 4134.0], [60.2, 4134.0], [60.3, 4134.0], [60.4, 4134.0], [60.5, 4134.0], [60.6, 4158.0], [60.7, 4158.0], [60.8, 4158.0], [60.9, 4158.0], [61.0, 4158.0], [61.1, 4158.0], [61.2, 4164.0], [61.3, 4164.0], [61.4, 4164.0], [61.5, 4164.0], [61.6, 4164.0], [61.7, 4164.0], [61.8, 4185.0], [61.9, 4185.0], [62.0, 4185.0], [62.1, 4185.0], [62.2, 4185.0], [62.3, 4185.0], [62.4, 4188.0], [62.5, 4188.0], [62.6, 4188.0], [62.7, 4188.0], [62.8, 4188.0], [62.9, 4188.0], [63.0, 4192.0], [63.1, 4192.0], [63.2, 4192.0], [63.3, 4192.0], [63.4, 4192.0], [63.5, 4192.0], [63.6, 4193.0], [63.7, 4193.0], [63.8, 4193.0], [63.9, 4193.0], [64.0, 4193.0], [64.1, 4193.0], [64.2, 4201.0], [64.3, 4201.0], [64.4, 4201.0], [64.5, 4201.0], [64.6, 4201.0], [64.7, 4201.0], [64.8, 4205.0], [64.9, 4205.0], [65.0, 4205.0], [65.1, 4205.0], [65.2, 4205.0], [65.3, 4228.0], [65.4, 4228.0], [65.5, 4228.0], [65.6, 4228.0], [65.7, 4228.0], [65.8, 4228.0], [65.9, 4238.0], [66.0, 4238.0], [66.1, 4238.0], [66.2, 4238.0], [66.3, 4238.0], [66.4, 4238.0], [66.5, 4281.0], [66.6, 4281.0], [66.7, 4281.0], [66.8, 4281.0], [66.9, 4281.0], [67.0, 4281.0], [67.1, 4295.0], [67.2, 4295.0], [67.3, 4295.0], [67.4, 4295.0], [67.5, 4295.0], [67.6, 4295.0], [67.7, 4369.0], [67.8, 4369.0], [67.9, 4369.0], [68.0, 4369.0], [68.1, 4369.0], [68.2, 4369.0], [68.3, 4387.0], [68.4, 4387.0], [68.5, 4387.0], [68.6, 4387.0], [68.7, 4387.0], [68.8, 4387.0], [68.9, 4392.0], [69.0, 4392.0], [69.1, 4392.0], [69.2, 4392.0], [69.3, 4392.0], [69.4, 4392.0], [69.5, 4423.0], [69.6, 4423.0], [69.7, 4423.0], [69.8, 4423.0], [69.9, 4423.0], [70.0, 4430.0], [70.1, 4430.0], [70.2, 4430.0], [70.3, 4430.0], [70.4, 4430.0], [70.5, 4430.0], [70.6, 4441.0], [70.7, 4441.0], [70.8, 4441.0], [70.9, 4441.0], [71.0, 4441.0], [71.1, 4441.0], [71.2, 4442.0], [71.3, 4442.0], [71.4, 4442.0], [71.5, 4442.0], [71.6, 4442.0], [71.7, 4442.0], [71.8, 4554.0], [71.9, 4554.0], [72.0, 4554.0], [72.1, 4554.0], [72.2, 4554.0], [72.3, 4554.0], [72.4, 4579.0], [72.5, 4579.0], [72.6, 4579.0], [72.7, 4579.0], [72.8, 4579.0], [72.9, 4579.0], [73.0, 4643.0], [73.1, 4643.0], [73.2, 4643.0], [73.3, 4643.0], [73.4, 4643.0], [73.5, 4643.0], [73.6, 4673.0], [73.7, 4673.0], [73.8, 4673.0], [73.9, 4673.0], [74.0, 4673.0], [74.1, 4673.0], [74.2, 4684.0], [74.3, 4684.0], [74.4, 4684.0], [74.5, 4684.0], [74.6, 4684.0], [74.7, 4684.0], [74.8, 4703.0], [74.9, 4703.0], [75.0, 4703.0], [75.1, 4703.0], [75.2, 4703.0], [75.3, 4721.0], [75.4, 4721.0], [75.5, 4721.0], [75.6, 4721.0], [75.7, 4721.0], [75.8, 4721.0], [75.9, 4733.0], [76.0, 4733.0], [76.1, 4733.0], [76.2, 4733.0], [76.3, 4733.0], [76.4, 4733.0], [76.5, 4735.0], [76.6, 4735.0], [76.7, 4735.0], [76.8, 4735.0], [76.9, 4735.0], [77.0, 4735.0], [77.1, 4745.0], [77.2, 4745.0], [77.3, 4745.0], [77.4, 4745.0], [77.5, 4745.0], [77.6, 4745.0], [77.7, 4797.0], [77.8, 4797.0], [77.9, 4797.0], [78.0, 4797.0], [78.1, 4797.0], [78.2, 4797.0], [78.3, 4839.0], [78.4, 4839.0], [78.5, 4839.0], [78.6, 4839.0], [78.7, 4839.0], [78.8, 4839.0], [78.9, 4857.0], [79.0, 4857.0], [79.1, 4857.0], [79.2, 4857.0], [79.3, 4857.0], [79.4, 4857.0], [79.5, 4865.0], [79.6, 4865.0], [79.7, 4865.0], [79.8, 4865.0], [79.9, 4865.0], [80.0, 4865.0], [80.1, 4866.0], [80.2, 4866.0], [80.3, 4866.0], [80.4, 4866.0], [80.5, 4866.0], [80.6, 4938.0], [80.7, 4938.0], [80.8, 4938.0], [80.9, 4938.0], [81.0, 4938.0], [81.1, 4938.0], [81.2, 4972.0], [81.3, 4972.0], [81.4, 4972.0], [81.5, 4972.0], [81.6, 4972.0], [81.7, 4972.0], [81.8, 4986.0], [81.9, 4986.0], [82.0, 4986.0], [82.1, 4986.0], [82.2, 4986.0], [82.3, 4986.0], [82.4, 5051.0], [82.5, 5051.0], [82.6, 5051.0], [82.7, 5051.0], [82.8, 5051.0], [82.9, 5051.0], [83.0, 5061.0], [83.1, 5061.0], [83.2, 5061.0], [83.3, 5061.0], [83.4, 5061.0], [83.5, 5061.0], [83.6, 5203.0], [83.7, 5203.0], [83.8, 5203.0], [83.9, 5203.0], [84.0, 5203.0], [84.1, 5203.0], [84.2, 5239.0], [84.3, 5239.0], [84.4, 5239.0], [84.5, 5239.0], [84.6, 5239.0], [84.7, 5239.0], [84.8, 5275.0], [84.9, 5275.0], [85.0, 5275.0], [85.1, 5275.0], [85.2, 5275.0], [85.3, 5281.0], [85.4, 5281.0], [85.5, 5281.0], [85.6, 5281.0], [85.7, 5281.0], [85.8, 5281.0], [85.9, 5328.0], [86.0, 5328.0], [86.1, 5328.0], [86.2, 5328.0], [86.3, 5328.0], [86.4, 5328.0], [86.5, 5332.0], [86.6, 5332.0], [86.7, 5332.0], [86.8, 5332.0], [86.9, 5332.0], [87.0, 5332.0], [87.1, 5341.0], [87.2, 5341.0], [87.3, 5341.0], [87.4, 5341.0], [87.5, 5341.0], [87.6, 5341.0], [87.7, 5455.0], [87.8, 5455.0], [87.9, 5455.0], [88.0, 5455.0], [88.1, 5455.0], [88.2, 5455.0], [88.3, 5480.0], [88.4, 5480.0], [88.5, 5480.0], [88.6, 5480.0], [88.7, 5480.0], [88.8, 5480.0], [88.9, 5638.0], [89.0, 5638.0], [89.1, 5638.0], [89.2, 5638.0], [89.3, 5638.0], [89.4, 5638.0], [89.5, 5739.0], [89.6, 5739.0], [89.7, 5739.0], [89.8, 5739.0], [89.9, 5739.0], [90.0, 5739.0], [90.1, 5758.0], [90.2, 5758.0], [90.3, 5758.0], [90.4, 5758.0], [90.5, 5758.0], [90.6, 5765.0], [90.7, 5765.0], [90.8, 5765.0], [90.9, 5765.0], [91.0, 5765.0], [91.1, 5765.0], [91.2, 5779.0], [91.3, 5779.0], [91.4, 5779.0], [91.5, 5779.0], [91.6, 5779.0], [91.7, 5779.0], [91.8, 5803.0], [91.9, 5803.0], [92.0, 5803.0], [92.1, 5803.0], [92.2, 5803.0], [92.3, 5803.0], [92.4, 5865.0], [92.5, 5865.0], [92.6, 5865.0], [92.7, 5865.0], [92.8, 5865.0], [92.9, 5865.0], [93.0, 5865.0], [93.1, 5865.0], [93.2, 5865.0], [93.3, 5865.0], [93.4, 5865.0], [93.5, 5865.0], [93.6, 5917.0], [93.7, 5917.0], [93.8, 5917.0], [93.9, 5917.0], [94.0, 5917.0], [94.1, 5917.0], [94.2, 5940.0], [94.3, 5940.0], [94.4, 5940.0], [94.5, 5940.0], [94.6, 5940.0], [94.7, 5940.0], [94.8, 5952.0], [94.9, 5952.0], [95.0, 5952.0], [95.1, 5952.0], [95.2, 5952.0], [95.3, 5961.0], [95.4, 5961.0], [95.5, 5961.0], [95.6, 5961.0], [95.7, 5961.0], [95.8, 5961.0], [95.9, 6066.0], [96.0, 6066.0], [96.1, 6066.0], [96.2, 6066.0], [96.3, 6066.0], [96.4, 6066.0], [96.5, 6085.0], [96.6, 6085.0], [96.7, 6085.0], [96.8, 6085.0], [96.9, 6085.0], [97.0, 6085.0], [97.1, 6275.0], [97.2, 6275.0], [97.3, 6275.0], [97.4, 6275.0], [97.5, 6275.0], [97.6, 6275.0], [97.7, 6307.0], [97.8, 6307.0], [97.9, 6307.0], [98.0, 6307.0], [98.1, 6307.0], [98.2, 6307.0], [98.3, 8134.0], [98.4, 8134.0], [98.5, 8134.0], [98.6, 8134.0], [98.7, 8134.0], [98.8, 8134.0], [98.9, 14187.0], [99.0, 14187.0], [99.1, 14187.0], [99.2, 14187.0], [99.3, 14187.0], [99.4, 14187.0], [99.5, 14844.0], [99.6, 14844.0], [99.7, 14844.0], [99.8, 14844.0], [99.9, 14844.0], [100.0, 14844.0]], "isOverall": false, "label": "Home-1", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 256.0, "series": [{"data": [[600.0, 13.0], [700.0, 17.0], [800.0, 24.0], [900.0, 25.0], [1000.0, 8.0], [1100.0, 13.0], [1200.0, 4.0], [1300.0, 8.0], [1400.0, 6.0], [1500.0, 8.0], [1600.0, 5.0], [1700.0, 13.0], [1800.0, 13.0], [1900.0, 11.0], [2000.0, 11.0], [2100.0, 11.0], [2200.0, 8.0], [2300.0, 4.0], [2400.0, 5.0], [2500.0, 6.0], [2600.0, 6.0], [2800.0, 4.0], [2700.0, 5.0], [2900.0, 2.0], [3000.0, 1.0], [3300.0, 1.0], [3500.0, 2.0], [3600.0, 2.0], [3700.0, 3.0], [3800.0, 5.0], [3900.0, 13.0], [4000.0, 16.0], [4100.0, 9.0], [4200.0, 8.0], [4300.0, 3.0], [4400.0, 2.0], [4500.0, 2.0], [5000.0, 1.0], [5200.0, 1.0], [12500.0, 1.0], [13300.0, 1.0], [13200.0, 1.0], [14500.0, 2.0], [15100.0, 1.0], [16000.0, 2.0], [15900.0, 1.0], [16100.0, 1.0], [16500.0, 1.0], [17200.0, 2.0], [16800.0, 1.0], [16900.0, 1.0], [17600.0, 1.0], [100.0, 133.0], [200.0, 16.0], [300.0, 11.0], [400.0, 14.0], [500.0, 11.0]], "isOverall": false, "label": "Login-page", "isController": false}, {"data": [[0.0, 256.0], [600.0, 1.0], [700.0, 3.0], [800.0, 2.0], [900.0, 1.0], [1100.0, 1.0], [1700.0, 4.0], [1800.0, 5.0], [1900.0, 4.0], [2000.0, 1.0], [2100.0, 1.0], [2200.0, 3.0], [2300.0, 2.0], [2400.0, 3.0], [2500.0, 1.0], [2600.0, 1.0], [2700.0, 4.0], [2800.0, 2.0], [2900.0, 3.0], [3000.0, 1.0], [3100.0, 2.0], [3300.0, 1.0], [3200.0, 1.0], [3400.0, 1.0], [3600.0, 1.0], [3700.0, 2.0], [3800.0, 10.0], [3900.0, 9.0], [4000.0, 3.0], [4200.0, 3.0], [4100.0, 2.0], [4300.0, 1.0], [5100.0, 1.0], [5500.0, 1.0], [5700.0, 2.0], [6300.0, 1.0], [7100.0, 3.0], [7200.0, 4.0], [7300.0, 2.0], [7400.0, 3.0], [7500.0, 1.0], [7600.0, 2.0], [7900.0, 3.0], [7800.0, 1.0], [8100.0, 1.0], [8200.0, 2.0], [8500.0, 1.0], [8600.0, 3.0], [8700.0, 2.0], [8900.0, 3.0], [9100.0, 5.0], [8800.0, 1.0], [9200.0, 12.0], [9000.0, 2.0], [9500.0, 5.0], [9600.0, 5.0], [9700.0, 2.0], [9400.0, 7.0], [9300.0, 7.0], [9800.0, 3.0], [10100.0, 6.0], [10000.0, 3.0], [9900.0, 5.0], [10200.0, 1.0], [10300.0, 4.0], [10400.0, 1.0], [13900.0, 1.0], [14600.0, 2.0], [15000.0, 2.0], [15700.0, 1.0], [16900.0, 1.0], [17100.0, 1.0], [17200.0, 1.0], [18400.0, 1.0], [19100.0, 1.0], [21000.0, 1.0], [100.0, 35.0], [200.0, 4.0], [300.0, 5.0], [400.0, 1.0], [500.0, 3.0]], "isOverall": false, "label": "Home", "isController": false}, {"data": [[700.0, 1.0], [1700.0, 8.0], [1800.0, 6.0], [1900.0, 3.0], [2000.0, 1.0], [2100.0, 2.0], [2200.0, 2.0], [2300.0, 3.0], [2400.0, 1.0], [2500.0, 2.0], [2600.0, 2.0], [2700.0, 2.0], [2800.0, 4.0], [2900.0, 3.0], [3000.0, 4.0], [3100.0, 5.0], [3300.0, 6.0], [3200.0, 5.0], [3400.0, 2.0], [3500.0, 4.0], [3600.0, 2.0], [3700.0, 4.0], [3800.0, 5.0], [3900.0, 3.0], [4000.0, 3.0], [4200.0, 11.0], [4100.0, 3.0], [4300.0, 6.0], [4400.0, 3.0], [4600.0, 1.0], [4500.0, 1.0], [4700.0, 4.0], [4800.0, 1.0], [4900.0, 3.0], [5000.0, 2.0], [5100.0, 4.0], [5200.0, 2.0], [5300.0, 2.0], [5400.0, 2.0], [5600.0, 2.0], [5500.0, 1.0], [5700.0, 2.0], [5800.0, 2.0], [6000.0, 2.0], [5900.0, 2.0], [6100.0, 1.0], [6300.0, 2.0], [6200.0, 2.0], [6500.0, 5.0], [6400.0, 2.0], [6600.0, 1.0], [6800.0, 1.0], [6700.0, 1.0], [13600.0, 1.0], [14800.0, 2.0], [14400.0, 1.0], [15300.0, 1.0], [15400.0, 1.0], [16700.0, 1.0], [16900.0, 1.0], [16800.0, 1.0], [300.0, 3.0], [400.0, 3.0], [500.0, 1.0]], "isOverall": false, "label": "Home-0", "isController": false}, {"data": [[0.0, 38.0], [14100.0, 1.0], [900.0, 1.0], [14800.0, 1.0], [1000.0, 1.0], [1200.0, 1.0], [1500.0, 1.0], [100.0, 2.0], [2300.0, 1.0], [2500.0, 2.0], [2600.0, 4.0], [2800.0, 1.0], [2700.0, 2.0], [3000.0, 2.0], [3100.0, 2.0], [3200.0, 1.0], [3300.0, 2.0], [200.0, 6.0], [3500.0, 3.0], [3700.0, 2.0], [3800.0, 3.0], [3900.0, 3.0], [4000.0, 9.0], [4200.0, 6.0], [4100.0, 9.0], [4300.0, 3.0], [4400.0, 4.0], [4600.0, 3.0], [4500.0, 2.0], [4700.0, 6.0], [4800.0, 4.0], [300.0, 9.0], [4900.0, 3.0], [5000.0, 2.0], [5200.0, 4.0], [5300.0, 3.0], [5600.0, 1.0], [5400.0, 2.0], [5700.0, 4.0], [5800.0, 3.0], [5900.0, 4.0], [6000.0, 2.0], [6300.0, 1.0], [6200.0, 1.0], [400.0, 3.0], [500.0, 1.0], [8100.0, 1.0]], "isOverall": false, "label": "Home-1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 21000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 25.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 663.0, "series": [{"data": [[0.0, 25.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 62.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 590.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 663.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 162.53059701492538, "minX": 1.64330736E12, "maxY": 162.53059701492538, "series": [{"data": [[1.64330736E12, 162.53059701492538]], "isOverall": false, "label": "CDI-J&J", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64330736E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 29.0, "minX": 1.0, "maxY": 21059.0, "series": [{"data": [[14.0, 16084.5], [17.0, 16975.0], [18.0, 17243.666666666668], [19.0, 17288.0], [29.0, 16545.0], [41.0, 15935.0], [42.0, 16097.0], [70.0, 15105.0], [85.0, 14556.0], [91.0, 12518.0], [88.0, 13325.5], [133.0, 4028.0], [132.0, 3985.5], [131.0, 4079.3333333333335], [130.0, 4012.3333333333335], [143.0, 2520.5], [136.0, 901.0], [141.0, 2551.5], [140.0, 3614.5], [142.0, 4064.0], [139.0, 4042.0], [138.0, 3981.5], [145.0, 3102.4285714285716], [147.0, 1868.0], [146.0, 2897.6666666666665], [144.0, 2775.5], [148.0, 1090.5], [149.0, 1316.0], [150.0, 600.0], [151.0, 3952.0], [153.0, 783.0], [154.0, 1421.0], [155.0, 3109.3333333333335], [158.0, 3925.3500000000004], [159.0, 1317.0], [157.0, 4383.0], [156.0, 4375.5], [152.0, 4088.75], [160.0, 1475.0], [161.0, 1381.0], [162.0, 1430.0], [164.0, 1713.5], [165.0, 1521.0], [166.0, 914.5], [167.0, 1113.8333333333335], [173.0, 487.29999999999995], [175.0, 508.5882352941176], [174.0, 1098.9090909090908], [172.0, 143.4], [169.0, 1864.5], [171.0, 189.0], [178.0, 870.3333333333333], [181.0, 782.7916666666667], [182.0, 788.0], [180.0, 471.2173913043479], [179.0, 436.5], [177.0, 856.6363636363637], [176.0, 388.91666666666674], [183.0, 1171.0], [189.0, 212.5], [190.0, 2078.0], [191.0, 170.33333333333334], [187.0, 1023.6666666666666], [184.0, 653.6666666666666], [185.0, 893.8333333333334], [194.0, 1546.0], [197.0, 1088.0], [199.0, 230.66666666666666], [196.0, 203.0], [195.0, 195.0], [204.0, 1428.3333333333333], [205.0, 1926.0], [206.0, 808.1666666666667], [207.0, 1035.0], [203.0, 198.0], [201.0, 221.0], [200.0, 194.5], [211.0, 807.0], [213.0, 955.5], [214.0, 1262.0], [215.0, 377.0], [210.0, 292.0], [209.0, 252.0], [217.0, 729.5], [219.0, 1960.0], [224.0, 2099.5], [225.0, 1482.0], [227.0, 2150.0], [228.0, 1473.5], [229.0, 1510.0], [230.0, 1653.0], [231.0, 1840.0], [226.0, 401.5], [234.0, 2030.0], [235.0, 2049.0], [239.0, 1952.0], [238.0, 413.0], [241.0, 979.0], [243.0, 1518.6666666666667], [246.0, 1756.5], [244.0, 492.0], [240.0, 723.8333333333334], [255.0, 578.6363636363636], [250.0, 623.0], [269.0, 2317.0], [256.0, 1193.3333333333333], [259.0, 1205.3333333333333], [257.0, 666.7142857142858], [260.0, 1679.6666666666667], [261.0, 1162.5], [266.0, 1045.0], [267.0, 1609.3333333333333], [270.0, 955.5], [271.0, 1322.3333333333333], [284.0, 1815.5], [273.0, 2490.0], [274.0, 1530.0], [277.0, 1304.75], [279.0, 2470.5], [280.0, 2579.0], [285.0, 1842.0], [287.0, 1760.0], [281.0, 2845.0], [290.0, 1473.7777777777778], [291.0, 1500.888888888889], [292.0, 1679.0], [293.0, 1567.5], [289.0, 1310.0], [288.0, 1523.2], [294.0, 1239.2], [295.0, 862.0], [296.0, 1468.5], [301.0, 1263.3333333333333], [300.0, 1319.0], [299.0, 1360.0], [298.0, 2020.0], [297.0, 1263.6666666666667]], "isOverall": false, "label": "Login-page", "isController": false}, {"data": [[200.42400000000012, 1839.6099999999997]], "isOverall": false, "label": "Login-page-Aggregated", "isController": false}, {"data": [[2.0, 21059.0], [3.0, 14604.0], [4.0, 5798.0], [5.0, 13948.0], [6.0, 14683.0], [7.0, 18483.0], [8.0, 15065.0], [9.0, 15084.0], [10.0, 15768.0], [11.0, 19120.0], [12.0, 884.0], [13.0, 715.0], [14.0, 676.0], [15.0, 713.0], [16.0, 702.0], [17.0, 853.0], [18.0, 17294.0], [19.0, 954.0], [20.0, 17119.0], [22.0, 2560.0], [23.0, 2424.0], [24.0, 3816.0], [25.0, 5160.0], [26.0, 16915.0], [27.0, 4269.0], [29.0, 6861.5], [30.0, 9194.0], [31.0, 9203.0], [33.0, 9156.0], [32.0, 9162.0], [35.0, 9167.0], [34.0, 9213.0], [37.0, 9244.0], [36.0, 9296.0], [39.0, 9213.0], [38.0, 9053.0], [41.0, 9401.0], [42.0, 9291.0], [45.0, 9357.0], [44.0, 9532.0], [47.0, 9670.0], [46.0, 9317.0], [49.0, 9263.0], [48.0, 9464.0], [51.0, 9546.0], [50.0, 9393.0], [53.0, 9378.0], [52.0, 9295.0], [55.0, 9412.0], [54.0, 9456.0], [57.0, 9248.0], [56.0, 9392.0], [58.0, 9302.0], [61.0, 9469.0], [60.0, 9595.5], [63.0, 9734.0], [62.0, 9684.0], [67.0, 9582.0], [66.0, 9851.0], [65.0, 9285.0], [64.0, 9697.0], [71.0, 9711.0], [70.0, 10066.0], [69.0, 9980.5], [75.0, 10269.0], [74.0, 9989.0], [73.0, 9975.0], [72.0, 10189.0], [78.0, 10451.0], [77.0, 9818.0], [76.0, 10365.0], [83.0, 10135.0], [82.0, 9962.0], [81.0, 10197.0], [80.0, 10096.5], [87.0, 10371.0], [86.0, 10318.0], [85.0, 10098.0], [84.0, 10151.0], [91.0, 9864.0], [90.0, 9651.0], [89.0, 10171.0], [88.0, 10391.0], [95.0, 9224.0], [94.0, 9296.0], [93.0, 9003.0], [92.0, 9578.0], [99.0, 8964.0], [98.0, 8969.0], [97.0, 9181.0], [96.0, 8890.0], [103.0, 8640.0], [102.0, 8719.0], [101.0, 8732.0], [100.0, 8940.0], [107.0, 8283.0], [106.0, 8549.0], [105.0, 8653.0], [104.0, 8621.0], [111.0, 7998.0], [110.0, 7956.0], [109.0, 8188.0], [115.0, 7661.0], [114.0, 7671.0], [113.0, 7984.0], [112.0, 7876.0], [119.0, 7540.0], [118.0, 7410.0], [117.0, 7409.0], [116.0, 7459.0], [123.0, 7292.0], [122.0, 7198.0], [121.0, 7236.0], [120.0, 7341.0], [127.0, 7131.0], [126.0, 7196.0], [125.0, 7255.0], [124.0, 7338.0], [135.0, 3897.0], [134.0, 4162.0], [133.0, 4043.0], [132.0, 3952.0], [131.0, 4165.0], [130.0, 7241.0], [129.0, 3915.0], [128.0, 4049.0], [143.0, 3840.0], [142.0, 3904.0], [141.0, 3822.0], [140.0, 4205.0], [139.0, 3938.0], [138.0, 3919.0], [137.0, 3946.0], [136.0, 3912.0], [151.0, 3945.0], [150.0, 3833.0], [149.0, 3873.0], [148.0, 3842.0], [147.0, 3767.0], [146.0, 3818.0], [145.0, 3900.0], [144.0, 6304.0], [159.0, 29.0], [158.0, 32.0], [157.0, 3669.0], [156.0, 3846.0], [155.0, 5599.0], [154.0, 3795.0], [153.0, 3844.0], [152.0, 5778.0], [167.0, 34.0], [166.0, 1718.0], [164.0, 36.0], [161.0, 36.0], [160.0, 3252.0], [175.0, 721.8125], [174.0, 423.71428571428567], [173.0, 648.5714285714287], [169.0, 2174.3333333333335], [172.0, 58.0], [171.0, 1634.5], [181.0, 391.1538461538461], [180.0, 293.16666666666674], [182.0, 36.27272727272728], [179.0, 303.1000000000001], [178.0, 361.3571428571428], [177.0, 261.75], [183.0, 887.0], [176.0, 254.1428571428571], [191.0, 527.3333333333333], [187.0, 206.0], [188.0, 40.5], [186.0, 37.0], [185.0, 729.3333333333333], [184.0, 34.85714285714286], [199.0, 42.0], [197.0, 33.0], [196.0, 39.0], [195.0, 107.71428571428571], [192.0, 41.0], [207.0, 64.66666666666667], [206.0, 45.0], [204.0, 1982.0], [203.0, 56.0], [201.0, 41.0], [200.0, 39.5], [215.0, 50.0], [213.0, 53.5], [211.0, 669.0], [210.0, 1923.5], [209.0, 57.25], [223.0, 229.33333333333334], [221.0, 1884.0], [219.0, 1886.0], [218.0, 193.0], [217.0, 47.0], [216.0, 47.0], [230.0, 55.0], [226.0, 226.33333333333334], [225.0, 70.0], [239.0, 53.2], [238.0, 51.0], [236.0, 52.0], [233.0, 54.0], [247.0, 60.0], [245.0, 644.3333333333333], [244.0, 46.6], [241.0, 53.666666666666664], [255.0, 60.0], [254.0, 61.0], [253.0, 61.333333333333336], [252.0, 62.0], [250.0, 56.0], [258.0, 85.0], [270.0, 75.8], [265.0, 70.5], [262.0, 88.0], [260.0, 91.0], [261.0, 1217.3333333333333], [259.0, 1788.0], [257.0, 1225.3333333333335], [256.0, 933.5], [286.0, 165.0], [287.0, 194.0], [284.0, 178.5], [283.0, 175.33333333333334], [282.0, 165.0], [281.0, 78.33333333333333], [280.0, 74.0], [277.0, 73.44444444444444], [272.0, 63.0], [274.0, 70.0], [290.0, 169.33333333333334], [292.0, 190.5], [293.0, 194.0], [291.0, 187.0], [289.0, 175.5], [288.0, 178.8], [294.0, 190.0], [295.0, 190.5], [300.0, 213.33333333333334], [301.0, 195.0], [299.0, 194.0], [298.0, 183.0], [297.0, 185.0], [296.0, 190.5], [1.0, 4382.0]], "isOverall": false, "label": "Home", "isController": false}, {"data": [[169.70200000000003, 2772.5399999999995]], "isOverall": false, "label": "Home-Aggregated", "isController": false}, {"data": [[2.0, 16871.0], [3.0, 6469.0], [4.0, 5545.0], [5.0, 13624.0], [6.0, 14428.0], [7.0, 4296.0], [8.0, 14824.0], [9.0, 14818.0], [10.0, 15420.0], [11.0, 4275.0], [12.0, 364.0], [13.0, 380.0], [14.0, 412.0], [15.0, 462.0], [16.0, 329.0], [17.0, 546.0], [18.0, 16922.0], [19.0, 488.0], [20.0, 16772.0], [22.0, 2221.0], [23.0, 1990.0], [24.0, 3343.0], [25.0, 3899.0], [26.0, 15353.0], [27.0, 3353.0], [29.0, 4972.0], [30.0, 6804.0], [31.0, 6557.0], [33.0, 6520.0], [32.0, 6619.0], [35.0, 6516.0], [34.0, 6588.0], [37.0, 6496.0], [36.0, 6241.0], [39.0, 6328.0], [38.0, 6517.0], [41.0, 6271.0], [42.0, 6174.0], [45.0, 5984.0], [44.0, 5850.0], [47.0, 5829.0], [46.0, 6001.0], [49.0, 6003.0], [48.0, 5890.0], [51.0, 5352.0], [50.0, 5653.0], [53.0, 5661.0], [52.0, 5736.0], [55.0, 5173.0], [54.0, 5414.0], [57.0, 5326.0], [56.0, 5272.0], [58.0, 5007.0], [61.0, 5423.0], [60.0, 5154.0], [63.0, 4876.0], [62.0, 5297.0], [67.0, 5028.0], [66.0, 4985.0], [65.0, 5150.0], [64.0, 4961.0], [71.0, 4978.0], [70.0, 4585.0], [69.0, 4702.0], [75.0, 4352.0], [74.0, 4648.0], [73.0, 4771.0], [72.0, 4733.0], [78.0, 4176.0], [77.0, 4485.0], [76.0, 4404.0], [83.0, 4331.0], [82.0, 4223.0], [81.0, 4256.0], [80.0, 4334.5], [87.0, 4304.0], [86.0, 4232.0], [85.0, 3790.0], [84.0, 4286.0], [91.0, 4225.0], [90.0, 3872.0], [89.0, 4305.0], [88.0, 4439.0], [95.0, 4173.0], [94.0, 4235.0], [93.0, 4016.0], [92.0, 4250.0], [99.0, 4167.0], [98.0, 4031.0], [97.0, 3941.0], [96.0, 3918.0], [103.0, 3773.0], [102.0, 3880.0], [101.0, 4059.0], [100.0, 4218.0], [107.0, 3703.0], [106.0, 3865.0], [105.0, 3950.0], [104.0, 3875.0], [111.0, 3568.0], [110.0, 3587.0], [109.0, 3654.0], [115.0, 3460.0], [114.0, 3478.0], [113.0, 3592.0], [112.0, 3690.0], [119.0, 3334.0], [118.0, 3326.0], [117.0, 3251.0], [116.0, 3374.0], [123.0, 3279.0], [122.0, 3183.0], [121.0, 3207.0], [120.0, 3277.0], [127.0, 3060.0], [126.0, 3088.0], [125.0, 3091.0], [124.0, 3109.0], [130.0, 2959.0], [144.0, 2322.0], [155.0, 1704.0], [152.0, 1801.0], [166.0, 3378.0], [160.0, 3223.0], [175.0, 2750.0], [174.0, 2760.0], [173.0, 2864.6666666666665], [169.0, 3063.5], [171.0, 3091.0], [178.0, 2268.5], [179.0, 2679.5], [181.0, 2313.5], [180.0, 2323.0], [183.0, 2562.0], [177.0, 2683.0], [176.0, 2887.0], [191.0, 1988.0], [185.0, 2072.0], [204.0, 1902.0], [211.0, 1855.0], [210.0, 1872.0], [221.0, 1828.0], [219.0, 1830.0], [245.0, 1753.0], [261.0, 1702.5], [259.0, 1703.0], [257.0, 1710.5], [256.0, 1745.0], [1.0, 4229.0]], "isOverall": false, "label": "Home-0", "isController": false}, {"data": [[96.25882352941179, 4423.641176470588]], "isOverall": false, "label": "Home-0-Aggregated", "isController": false}, {"data": [[2.0, 4188.0], [3.0, 8134.0], [4.0, 254.0], [5.0, 325.0], [6.0, 256.0], [7.0, 14187.0], [8.0, 242.0], [9.0, 266.0], [10.0, 349.0], [11.0, 14844.0], [12.0, 520.0], [13.0, 335.0], [14.0, 265.0], [15.0, 250.0], [16.0, 372.0], [17.0, 306.0], [18.0, 372.0], [19.0, 466.0], [20.0, 346.0], [22.0, 338.0], [23.0, 434.0], [24.0, 473.0], [25.0, 1261.0], [26.0, 1562.0], [27.0, 915.0], [29.0, 1889.5], [30.0, 2389.0], [31.0, 2645.0], [33.0, 2635.0], [32.0, 2542.0], [35.0, 2651.0], [34.0, 2624.0], [37.0, 2748.0], [36.0, 3054.0], [39.0, 2885.0], [38.0, 2536.0], [41.0, 3130.0], [42.0, 3116.0], [45.0, 3373.0], [44.0, 3681.5], [47.0, 3841.0], [46.0, 3316.0], [49.0, 3260.0], [48.0, 3574.0], [51.0, 4193.0], [50.0, 3740.0], [53.0, 3716.0], [52.0, 3559.0], [55.0, 4238.0], [54.0, 4042.0], [57.0, 3922.0], [56.0, 4119.0], [58.0, 4295.0], [61.0, 4046.0], [60.0, 4441.5], [63.0, 4857.0], [62.0, 4387.0], [67.0, 4554.0], [66.0, 4865.0], [65.0, 4134.0], [64.0, 4735.0], [71.0, 4733.0], [70.0, 5480.0], [69.0, 5278.0], [75.0, 5917.0], [74.0, 5341.0], [73.0, 5203.0], [72.0, 5455.0], [78.0, 6275.0], [77.0, 5332.0], [76.0, 5961.0], [83.0, 5803.0], [82.0, 5739.0], [81.0, 5940.0], [80.0, 5761.5], [87.0, 6066.0], [86.0, 6085.0], [85.0, 6307.0], [84.0, 5865.0], [91.0, 5638.0], [90.0, 5779.0], [89.0, 5865.0], [88.0, 5952.0], [95.0, 5051.0], [94.0, 5061.0], [93.0, 4986.0], [92.0, 5328.0], [99.0, 4797.0], [98.0, 4938.0], [97.0, 5239.0], [96.0, 4972.0], [103.0, 4866.0], [102.0, 4839.0], [101.0, 4673.0], [100.0, 4721.0], [107.0, 4579.0], [106.0, 4684.0], [105.0, 4703.0], [104.0, 4745.0], [111.0, 4430.0], [110.0, 4369.0], [109.0, 4533.0], [115.0, 4201.0], [114.0, 4192.0], [113.0, 4392.0], [112.0, 4185.0], [119.0, 4205.0], [118.0, 4084.0], [117.0, 4158.0], [116.0, 4084.0], [123.0, 4013.0], [122.0, 4015.0], [121.0, 4029.0], [120.0, 4064.0], [127.0, 4071.0], [126.0, 4107.0], [125.0, 4164.0], [124.0, 4228.0], [130.0, 4281.0], [144.0, 3981.0], [155.0, 3894.0], [152.0, 3977.0], [166.0, 31.0], [160.0, 29.0], [175.0, 36.0], [174.0, 30.0], [173.0, 32.666666666666664], [169.0, 90.5], [171.0, 88.0], [178.0, 42.5], [179.0, 35.5], [181.0, 35.5], [180.0, 37.0], [183.0, 31.0], [177.0, 43.0], [176.0, 47.0], [191.0, 34.0], [185.0, 30.0], [204.0, 79.0], [211.0, 44.0], [210.0, 50.5], [221.0, 55.0], [219.0, 56.0], [245.0, 59.0], [261.0, 76.5], [259.0, 83.0], [257.0, 85.5], [256.0, 59.0], [1.0, 154.0]], "isOverall": false, "label": "Home-1", "isController": false}, {"data": [[96.25882352941179, 2998.5999999999985]], "isOverall": false, "label": "Home-1-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 301.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 11829.366666666667, "minX": 1.64330736E12, "maxY": 578464.5166666667, "series": [{"data": [[1.64330736E12, 578464.5166666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.64330736E12, 11829.366666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64330736E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1839.6099999999997, "minX": 1.64330736E12, "maxY": 4423.641176470588, "series": [{"data": [[1.64330736E12, 1839.6099999999997]], "isOverall": false, "label": "Login-page", "isController": false}, {"data": [[1.64330736E12, 2772.5399999999995]], "isOverall": false, "label": "Home", "isController": false}, {"data": [[1.64330736E12, 4423.641176470588]], "isOverall": false, "label": "Home-0", "isController": false}, {"data": [[1.64330736E12, 2998.5999999999985]], "isOverall": false, "label": "Home-1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64330736E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1750.824, "minX": 1.64330736E12, "maxY": 4423.588235294119, "series": [{"data": [[1.64330736E12, 1810.7279999999994]], "isOverall": false, "label": "Login-page", "isController": false}, {"data": [[1.64330736E12, 1750.824]], "isOverall": false, "label": "Home", "isController": false}, {"data": [[1.64330736E12, 4423.588235294119]], "isOverall": false, "label": "Home-0", "isController": false}, {"data": [[1.64330736E12, 2926.876470588233]], "isOverall": false, "label": "Home-1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64330736E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.64330736E12, "maxY": 380.054, "series": [{"data": [[1.64330736E12, 380.054]], "isOverall": false, "label": "Login-page", "isController": false}, {"data": [[1.64330736E12, 0.0]], "isOverall": false, "label": "Home", "isController": false}, {"data": [[1.64330736E12, 0.0]], "isOverall": false, "label": "Home-0", "isController": false}, {"data": [[1.64330736E12, 0.0]], "isOverall": false, "label": "Home-1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64330736E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 154.0, "minX": 1.64330736E12, "maxY": 21059.0, "series": [{"data": [[1.64330736E12, 21059.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.64330736E12, 9654.800000000001]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.64330736E12, 17266.16]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.64330736E12, 14211.100000000006]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.64330736E12, 154.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.64330736E12, 4008.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64330736E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 32.0, "minX": 9.0, "maxY": 14824.0, "series": [{"data": [[137.0, 3207.0], [34.0, 3939.0], [35.0, 4164.0], [9.0, 520.0], [39.0, 4082.0], [42.0, 3501.0], [46.0, 3298.5], [48.0, 6845.0], [13.0, 14824.0], [14.0, 504.0], [245.0, 2576.0], [16.0, 5645.5], [17.0, 6516.5], [18.0, 6120.0], [22.0, 5151.0], [403.0, 1887.5], [25.0, 4771.0], [28.0, 1007.5], [31.0, 4392.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[137.0, 88.0], [34.0, 32.0], [35.0, 4000.5], [39.0, 3885.0], [403.0, 184.0], [245.0, 51.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 403.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 32.0, "minX": 9.0, "maxY": 14788.0, "series": [{"data": [[137.0, 3207.0], [34.0, 3931.0], [35.0, 3884.0], [9.0, 380.0], [39.0, 4033.5], [42.0, 3269.0], [46.0, 3176.5], [48.0, 4685.0], [13.0, 14788.0], [14.0, 437.0], [245.0, 2575.0], [16.0, 5418.5], [17.0, 6482.5], [18.0, 5967.5], [22.0, 4896.5], [403.0, 1802.5], [25.0, 4585.0], [28.0, 988.5], [31.0, 4119.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[137.0, 88.0], [34.0, 32.0], [35.0, 3968.0], [39.0, 3849.0], [403.0, 184.0], [245.0, 51.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 403.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 22.333333333333332, "minX": 1.64330736E12, "maxY": 22.333333333333332, "series": [{"data": [[1.64330736E12, 22.333333333333332]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64330736E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.43333333333333335, "minX": 1.64330736E12, "maxY": 10.616666666666667, "series": [{"data": [[1.64330736E12, 8.45]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.64330736E12, 2.8333333333333335]], "isOverall": false, "label": "302", "isController": false}, {"data": [[1.64330736E12, 10.616666666666667]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.64330736E12, 0.43333333333333335]], "isOverall": false, "label": "419", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64330736E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.65, "minX": 1.64330736E12, "maxY": 6.15, "series": [{"data": [[1.64330736E12, 0.65]], "isOverall": false, "label": "Home-1-failure", "isController": false}, {"data": [[1.64330736E12, 2.183333333333333]], "isOverall": false, "label": "Home-1-success", "isController": false}, {"data": [[1.64330736E12, 4.25]], "isOverall": false, "label": "Login-page-failure", "isController": false}, {"data": [[1.64330736E12, 4.083333333333333]], "isOverall": false, "label": "Login-page-success", "isController": false}, {"data": [[1.64330736E12, 6.15]], "isOverall": false, "label": "Home-failure", "isController": false}, {"data": [[1.64330736E12, 2.183333333333333]], "isOverall": false, "label": "Home-success", "isController": false}, {"data": [[1.64330736E12, 2.8333333333333335]], "isOverall": false, "label": "Home-0-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64330736E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 11.05, "minX": 1.64330736E12, "maxY": 11.283333333333333, "series": [{"data": [[1.64330736E12, 11.283333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.64330736E12, 11.05]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64330736E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

